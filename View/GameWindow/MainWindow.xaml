<Window x:Class="View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View"
        xmlns:util="clr-namespace:View.Util"
        xmlns:gamewindow="clr-namespace:View.GameWindow"
        xmlns:main="clr-namespace:ViewModel.Main;assembly=ViewModel"
        d:DataContext="{d:DesignInstance Type=main:MainViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        Background="#FF23B123" MinWidth="797" MinHeight="450" WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Style="{DynamicResource WindowStyle}"
        >

    <Window.Resources>
        <ResourceDictionary Source="../Styles/Styles.xaml"/>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.Delete" Executed="DeleteCommandBinding_OnExecuted"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding EscPressedCommand}">
        </KeyBinding>
    </Window.InputBindings>

    <DockPanel x:Name="MainPanel">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Főmenü" Style="{StaticResource MenuItemStyle}" Command="{Binding MenubarViewModel.MainMenuCommand}"/>
            <MenuItem Header="Betöltés" Style="{StaticResource MenuItemStyle}" Command="ApplicationCommands.Open"/>
            <MenuItem Header="Mentés" Style="{StaticResource MenuItemStyle}" Command="{Binding MenubarViewModel.SaveGameCommand}"/>
            <MenuItem Header="{Binding MenubarViewModel.StartButtonLabelState.Value}" Style="{StaticResource MenuItemStyle}" Command="{Binding MenubarViewModel.StartCommand}"/>
            <MenuItem Header="Sebesség" Style="{StaticResource MenuItemStyle}">
                <MenuItem Header="Lassú" IsCheckable="True" IsChecked="{Binding MenubarViewModel.IsSlowSelectedState.Value}" Style="{StaticResource MenuItemStyle}" Command="{Binding MenubarViewModel.SlowButtonCommand}"/>
                <MenuItem Header="Normál" IsCheckable="True" IsChecked="{Binding MenubarViewModel.IsNormalSelectedState.Value}" Style="{StaticResource MenuItemStyle}" Command="{Binding MenubarViewModel.NormalButtonCommand}"/>
                <MenuItem Header="Gyors" IsCheckable="True" IsChecked="{Binding MenubarViewModel.IsFastSelectedState.Value}" Style="{StaticResource MenuItemStyle}" Command="{Binding MenubarViewModel.FastButtonCommand}"/>
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom" Height="20" VerticalAlignment="Bottom">
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">

                    <TextBlock Text="{Binding NameState.Value}"/>

                    <Rectangle Width="20"/>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Kassza: "/>
                        <TextBlock Text="{Binding BudgetState.Value}"/>
                        <TextBlock Text="Ft"/>
                    </StackPanel>

                    <Rectangle Width="20"/>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Vendégek: "/>
                        <TextBlock Text="{Binding VisitorNumberState.Value}"/>
                    </StackPanel>

                    <Rectangle Width="20"/>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Idő: "/>
                        <TextBlock Text="{Binding TimeState.Value}"/>
                    </StackPanel>
                </StackPanel>
            </StatusBarItem>

        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="10,10,10,10">
                <ItemsControl ItemsSource="{Binding PurchasableCatalogViewModel.Elements}"  >


                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:CatalogElement/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>


                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel>
                                <StackPanel.Background>
                                    <SolidColorBrush Color="White" Opacity="0.6"/>
                                </StackPanel.Background>
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                </ItemsControl>
            </ScrollViewer>
            
            <ItemsControl Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" ItemsSource="{Binding Cells}" DockPanel.Dock="Top"  Margin="20,20,20,20">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Padding="0,0,0,0" Visibility="{Binding VisibilityState.Value}">
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Törlés" Command="{Binding DeleteCommand}"/>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Image Source="{Binding ImagePath}" Stretch="UniformToFill">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPreview}" Value="True">
                                                <Setter Property="Opacity" Value="0.7"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCollided}" Value="true">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsCollided}" Value="false">
                                            <Setter Property="Background" Value="Green"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsPreview}" Value="False">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="BorderBrush" Value="LightSkyBlue"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter" d:DataContext="{d:DesignInstance main:CellViewModel}">
                        <Setter Property="Grid.Row" Value="{Binding RowState.Value}"/>
                        <Setter Property="Grid.Column" Value="{Binding ColState.Value}"/>
                        <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}"/>
                        <Setter Property="Grid.ColumnSpan" Value="{Binding ColSpan}"/>
                        <Setter Property="Panel.ZIndex" Value="{Binding ZIndexState.Value}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <util:ClickableGrid Size="{Binding FieldSizeState.Value}" ShowGridLines="False"  Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                            <util:ClickableGrid.Background>
                                <ImageBrush ImageSource="../Resources/Images/dirt_background_finalxx.png" TileMode="Tile" Stretch="Fill" ViewportUnits="RelativeToBoundingBox" Viewport="0,0,0.04761904761,0.04761904761"/>
                            </util:ClickableGrid.Background>
                        </util:ClickableGrid>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <gamewindow:InfoPanelContainer Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Margin="10,10,10,10"/>
            

        </Grid>



    </DockPanel>
</Window>
