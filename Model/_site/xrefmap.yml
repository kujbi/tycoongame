### YamlMime:XRefMap
sorted: true
references:
- uid: Model
  name: Model
  href: api/Model.html
  commentId: N:Model
  fullName: Model
  nameWithType: Model
- uid: Model.AimShooting
  name: AimShooting
  href: api/Model.AimShooting.html
  commentId: T:Model.AimShooting
  fullName: Model.AimShooting
  nameWithType: AimShooting
- uid: Model.AimShooting.#ctor
  name: AimShooting()
  href: api/Model.AimShooting.html#Model_AimShooting__ctor
  commentId: M:Model.AimShooting.#ctor
  fullName: Model.AimShooting.AimShooting()
  nameWithType: AimShooting.AimShooting()
- uid: Model.AimShooting.#ctor(Model.GridPoint)
  name: AimShooting(GridPoint)
  href: api/Model.AimShooting.html#Model_AimShooting__ctor_Model_GridPoint_
  commentId: M:Model.AimShooting.#ctor(Model.GridPoint)
  fullName: Model.AimShooting.AimShooting(Model.GridPoint)
  nameWithType: AimShooting.AimShooting(GridPoint)
- uid: Model.AimShooting.#ctor*
  name: AimShooting
  href: api/Model.AimShooting.html#Model_AimShooting__ctor_
  commentId: Overload:Model.AimShooting.#ctor
  isSpec: "True"
  fullName: Model.AimShooting.AimShooting
  nameWithType: AimShooting.AimShooting
- uid: Model.Building
  name: Building
  href: api/Model.Building.html
  commentId: T:Model.Building
  fullName: Model.Building
  nameWithType: Building
- uid: Model.Building.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32,System.Drawing.Point,System.Int32,System.Int32,System.Int32)
  name: Building(String, GridPoint, Int32, Int32, Int32, Point, Int32, Int32, Int32)
  href: api/Model.Building.html#Model_Building__ctor_System_String_Model_GridPoint_System_Int32_System_Int32_System_Int32_System_Drawing_Point_System_Int32_System_Int32_System_Int32_
  commentId: M:Model.Building.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32,System.Drawing.Point,System.Int32,System.Int32,System.Int32)
  fullName: Model.Building.Building(System.String, Model.GridPoint, System.Int32, System.Int32, System.Int32, System.Drawing.Point, System.Int32, System.Int32, System.Int32)
  nameWithType: Building.Building(String, GridPoint, Int32, Int32, Int32, Point, Int32, Int32, Int32)
- uid: Model.Building.#ctor*
  name: Building
  href: api/Model.Building.html#Model_Building__ctor_
  commentId: Overload:Model.Building.#ctor
  isSpec: "True"
  fullName: Model.Building.Building
  nameWithType: Building.Building
- uid: Model.Building.ActivityDuration
  name: ActivityDuration
  href: api/Model.Building.html#Model_Building_ActivityDuration
  commentId: P:Model.Building.ActivityDuration
  fullName: Model.Building.ActivityDuration
  nameWithType: Building.ActivityDuration
- uid: Model.Building.ActivityDuration*
  name: ActivityDuration
  href: api/Model.Building.html#Model_Building_ActivityDuration_
  commentId: Overload:Model.Building.ActivityDuration
  isSpec: "True"
  fullName: Model.Building.ActivityDuration
  nameWithType: Building.ActivityDuration
- uid: Model.Building.BuildAndRepairTimeState
  name: BuildAndRepairTimeState
  href: api/Model.Building.html#Model_Building_BuildAndRepairTimeState
  commentId: P:Model.Building.BuildAndRepairTimeState
  fullName: Model.Building.BuildAndRepairTimeState
  nameWithType: Building.BuildAndRepairTimeState
- uid: Model.Building.BuildAndRepairTimeState*
  name: BuildAndRepairTimeState
  href: api/Model.Building.html#Model_Building_BuildAndRepairTimeState_
  commentId: Overload:Model.Building.BuildAndRepairTimeState
  isSpec: "True"
  fullName: Model.Building.BuildAndRepairTimeState
  nameWithType: Building.BuildAndRepairTimeState
- uid: Model.Building.BuildTime
  name: BuildTime
  href: api/Model.Building.html#Model_Building_BuildTime
  commentId: P:Model.Building.BuildTime
  fullName: Model.Building.BuildTime
  nameWithType: Building.BuildTime
- uid: Model.Building.BuildTime*
  name: BuildTime
  href: api/Model.Building.html#Model_Building_BuildTime_
  commentId: Overload:Model.Building.BuildTime
  isSpec: "True"
  fullName: Model.Building.BuildTime
  nameWithType: Building.BuildTime
- uid: Model.Building.Capacity
  name: Capacity
  href: api/Model.Building.html#Model_Building_Capacity
  commentId: P:Model.Building.Capacity
  fullName: Model.Building.Capacity
  nameWithType: Building.Capacity
- uid: Model.Building.Capacity*
  name: Capacity
  href: api/Model.Building.html#Model_Building_Capacity_
  commentId: Overload:Model.Building.Capacity
  isSpec: "True"
  fullName: Model.Building.Capacity
  nameWithType: Building.Capacity
- uid: Model.Building.Clear
  name: Clear()
  href: api/Model.Building.html#Model_Building_Clear
  commentId: M:Model.Building.Clear
  fullName: Model.Building.Clear()
  nameWithType: Building.Clear()
- uid: Model.Building.Clear*
  name: Clear
  href: api/Model.Building.html#Model_Building_Clear_
  commentId: Overload:Model.Building.Clear
  isSpec: "True"
  fullName: Model.Building.Clear
  nameWithType: Building.Clear
- uid: Model.Building.FinishRepair
  name: FinishRepair()
  href: api/Model.Building.html#Model_Building_FinishRepair
  commentId: M:Model.Building.FinishRepair
  fullName: Model.Building.FinishRepair()
  nameWithType: Building.FinishRepair()
- uid: Model.Building.FinishRepair*
  name: FinishRepair
  href: api/Model.Building.html#Model_Building_FinishRepair_
  commentId: Overload:Model.Building.FinishRepair
  isSpec: "True"
  fullName: Model.Building.FinishRepair
  nameWithType: Building.FinishRepair
- uid: Model.Building.HealthState
  name: HealthState
  href: api/Model.Building.html#Model_Building_HealthState
  commentId: P:Model.Building.HealthState
  fullName: Model.Building.HealthState
  nameWithType: Building.HealthState
- uid: Model.Building.HealthState*
  name: HealthState
  href: api/Model.Building.html#Model_Building_HealthState_
  commentId: Overload:Model.Building.HealthState
  isSpec: "True"
  fullName: Model.Building.HealthState
  nameWithType: Building.HealthState
- uid: Model.Building.LocationOnMap
  name: LocationOnMap
  href: api/Model.Building.html#Model_Building_LocationOnMap
  commentId: P:Model.Building.LocationOnMap
  fullName: Model.Building.LocationOnMap
  nameWithType: Building.LocationOnMap
- uid: Model.Building.LocationOnMap*
  name: LocationOnMap
  href: api/Model.Building.html#Model_Building_LocationOnMap_
  commentId: Overload:Model.Building.LocationOnMap
  isSpec: "True"
  fullName: Model.Building.LocationOnMap
  nameWithType: Building.LocationOnMap
- uid: Model.Building.MaxHealth
  name: MaxHealth
  href: api/Model.Building.html#Model_Building_MaxHealth
  commentId: F:Model.Building.MaxHealth
  fullName: Model.Building.MaxHealth
  nameWithType: Building.MaxHealth
- uid: Model.Building.MinimalUtilizationPercent
  name: MinimalUtilizationPercent
  href: api/Model.Building.html#Model_Building_MinimalUtilizationPercent
  commentId: P:Model.Building.MinimalUtilizationPercent
  fullName: Model.Building.MinimalUtilizationPercent
  nameWithType: Building.MinimalUtilizationPercent
- uid: Model.Building.MinimalUtilizationPercent*
  name: MinimalUtilizationPercent
  href: api/Model.Building.html#Model_Building_MinimalUtilizationPercent_
  commentId: Overload:Model.Building.MinimalUtilizationPercent
  isSpec: "True"
  fullName: Model.Building.MinimalUtilizationPercent
  nameWithType: Building.MinimalUtilizationPercent
- uid: Model.Building.MinimalUtilizationPercentState
  name: MinimalUtilizationPercentState
  href: api/Model.Building.html#Model_Building_MinimalUtilizationPercentState
  commentId: P:Model.Building.MinimalUtilizationPercentState
  fullName: Model.Building.MinimalUtilizationPercentState
  nameWithType: Building.MinimalUtilizationPercentState
- uid: Model.Building.MinimalUtilizationPercentState*
  name: MinimalUtilizationPercentState
  href: api/Model.Building.html#Model_Building_MinimalUtilizationPercentState_
  commentId: Overload:Model.Building.MinimalUtilizationPercentState
  isSpec: "True"
  fullName: Model.Building.MinimalUtilizationPercentState
  nameWithType: Building.MinimalUtilizationPercentState
- uid: Model.Building.MoneyNeedsToBeWithdrawnFromBudget
  name: MoneyNeedsToBeWithdrawnFromBudget
  href: api/Model.Building.html#Model_Building_MoneyNeedsToBeWithdrawnFromBudget
  commentId: E:Model.Building.MoneyNeedsToBeWithdrawnFromBudget
  fullName: Model.Building.MoneyNeedsToBeWithdrawnFromBudget
  nameWithType: Building.MoneyNeedsToBeWithdrawnFromBudget
- uid: Model.Building.Queue
  name: Queue
  href: api/Model.Building.html#Model_Building_Queue
  commentId: P:Model.Building.Queue
  fullName: Model.Building.Queue
  nameWithType: Building.Queue
- uid: Model.Building.Queue*
  name: Queue
  href: api/Model.Building.html#Model_Building_Queue_
  commentId: Overload:Model.Building.Queue
  isSpec: "True"
  fullName: Model.Building.Queue
  nameWithType: Building.Queue
- uid: Model.Building.StartRepair
  name: StartRepair()
  href: api/Model.Building.html#Model_Building_StartRepair
  commentId: M:Model.Building.StartRepair
  fullName: Model.Building.StartRepair()
  nameWithType: Building.StartRepair()
- uid: Model.Building.StartRepair*
  name: StartRepair
  href: api/Model.Building.html#Model_Building_StartRepair_
  commentId: Overload:Model.Building.StartRepair
  isSpec: "True"
  fullName: Model.Building.StartRepair
  nameWithType: Building.StartRepair
- uid: Model.Building.StopUsing(Model.Visitor)
  name: StopUsing(Visitor)
  href: api/Model.Building.html#Model_Building_StopUsing_Model_Visitor_
  commentId: M:Model.Building.StopUsing(Model.Visitor)
  fullName: Model.Building.StopUsing(Model.Visitor)
  nameWithType: Building.StopUsing(Visitor)
- uid: Model.Building.StopUsing*
  name: StopUsing
  href: api/Model.Building.html#Model_Building_StopUsing_
  commentId: Overload:Model.Building.StopUsing
  isSpec: "True"
  fullName: Model.Building.StopUsing
  nameWithType: Building.StopUsing
- uid: Model.Building.TicketPrice
  name: TicketPrice
  href: api/Model.Building.html#Model_Building_TicketPrice
  commentId: P:Model.Building.TicketPrice
  fullName: Model.Building.TicketPrice
  nameWithType: Building.TicketPrice
- uid: Model.Building.TicketPrice*
  name: TicketPrice
  href: api/Model.Building.html#Model_Building_TicketPrice_
  commentId: Overload:Model.Building.TicketPrice
  isSpec: "True"
  fullName: Model.Building.TicketPrice
  nameWithType: Building.TicketPrice
- uid: Model.Building.TicketPriceState
  name: TicketPriceState
  href: api/Model.Building.html#Model_Building_TicketPriceState
  commentId: P:Model.Building.TicketPriceState
  fullName: Model.Building.TicketPriceState
  nameWithType: Building.TicketPriceState
- uid: Model.Building.TicketPriceState*
  name: TicketPriceState
  href: api/Model.Building.html#Model_Building_TicketPriceState_
  commentId: Overload:Model.Building.TicketPriceState
  isSpec: "True"
  fullName: Model.Building.TicketPriceState
  nameWithType: Building.TicketPriceState
- uid: Model.Building.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.Building.html#Model_Building_TimeAdvanced
  commentId: M:Model.Building.TimeAdvanced
  fullName: Model.Building.TimeAdvanced()
  nameWithType: Building.TimeAdvanced()
- uid: Model.Building.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.Building.html#Model_Building_TimeAdvanced_
  commentId: Overload:Model.Building.TimeAdvanced
  isSpec: "True"
  fullName: Model.Building.TimeAdvanced
  nameWithType: Building.TimeAdvanced
- uid: Model.Building.TryUsing(Model.Visitor)
  name: TryUsing(Visitor)
  href: api/Model.Building.html#Model_Building_TryUsing_Model_Visitor_
  commentId: M:Model.Building.TryUsing(Model.Visitor)
  fullName: Model.Building.TryUsing(Model.Visitor)
  nameWithType: Building.TryUsing(Visitor)
- uid: Model.Building.TryUsing*
  name: TryUsing
  href: api/Model.Building.html#Model_Building_TryUsing_
  commentId: Overload:Model.Building.TryUsing
  isSpec: "True"
  fullName: Model.Building.TryUsing
  nameWithType: Building.TryUsing
- uid: Model.Building.UtilizationState
  name: UtilizationState
  href: api/Model.Building.html#Model_Building_UtilizationState
  commentId: P:Model.Building.UtilizationState
  fullName: Model.Building.UtilizationState
  nameWithType: Building.UtilizationState
- uid: Model.Building.UtilizationState*
  name: UtilizationState
  href: api/Model.Building.html#Model_Building_UtilizationState_
  commentId: Overload:Model.Building.UtilizationState
  isSpec: "True"
  fullName: Model.Building.UtilizationState
  nameWithType: Building.UtilizationState
- uid: Model.Building.VisitorEntered
  name: VisitorEntered
  href: api/Model.Building.html#Model_Building_VisitorEntered
  commentId: E:Model.Building.VisitorEntered
  fullName: Model.Building.VisitorEntered
  nameWithType: Building.VisitorEntered
- uid: Model.Bush
  name: Bush
  href: api/Model.Bush.html
  commentId: T:Model.Bush
  fullName: Model.Bush
  nameWithType: Bush
- uid: Model.Bush.#ctor
  name: Bush()
  href: api/Model.Bush.html#Model_Bush__ctor
  commentId: M:Model.Bush.#ctor
  fullName: Model.Bush.Bush()
  nameWithType: Bush.Bush()
- uid: Model.Bush.#ctor(Model.GridPoint)
  name: Bush(GridPoint)
  href: api/Model.Bush.html#Model_Bush__ctor_Model_GridPoint_
  commentId: M:Model.Bush.#ctor(Model.GridPoint)
  fullName: Model.Bush.Bush(Model.GridPoint)
  nameWithType: Bush.Bush(GridPoint)
- uid: Model.Bush.#ctor*
  name: Bush
  href: api/Model.Bush.html#Model_Bush__ctor_
  commentId: Overload:Model.Bush.#ctor
  isSpec: "True"
  fullName: Model.Bush.Bush
  nameWithType: Bush.Bush
- uid: Model.Direction
  name: Direction
  href: api/Model.Direction.html
  commentId: T:Model.Direction
  fullName: Model.Direction
  nameWithType: Direction
- uid: Model.Direction.Down
  name: Down
  href: api/Model.Direction.html#Model_Direction_Down
  commentId: F:Model.Direction.Down
  fullName: Model.Direction.Down
  nameWithType: Direction.Down
- uid: Model.Direction.Left
  name: Left
  href: api/Model.Direction.html#Model_Direction_Left
  commentId: F:Model.Direction.Left
  fullName: Model.Direction.Left
  nameWithType: Direction.Left
- uid: Model.Direction.NoDirection
  name: NoDirection
  href: api/Model.Direction.html#Model_Direction_NoDirection
  commentId: F:Model.Direction.NoDirection
  fullName: Model.Direction.NoDirection
  nameWithType: Direction.NoDirection
- uid: Model.Direction.Right
  name: Right
  href: api/Model.Direction.html#Model_Direction_Right
  commentId: F:Model.Direction.Right
  fullName: Model.Direction.Right
  nameWithType: Direction.Right
- uid: Model.Direction.Up
  name: Up
  href: api/Model.Direction.html#Model_Direction_Up
  commentId: F:Model.Direction.Up
  fullName: Model.Direction.Up
  nameWithType: Direction.Up
- uid: Model.Dodgem
  name: Dodgem
  href: api/Model.Dodgem.html
  commentId: T:Model.Dodgem
  fullName: Model.Dodgem
  nameWithType: Dodgem
- uid: Model.Dodgem.#ctor
  name: Dodgem()
  href: api/Model.Dodgem.html#Model_Dodgem__ctor
  commentId: M:Model.Dodgem.#ctor
  fullName: Model.Dodgem.Dodgem()
  nameWithType: Dodgem.Dodgem()
- uid: Model.Dodgem.#ctor(Model.GridPoint)
  name: Dodgem(GridPoint)
  href: api/Model.Dodgem.html#Model_Dodgem__ctor_Model_GridPoint_
  commentId: M:Model.Dodgem.#ctor(Model.GridPoint)
  fullName: Model.Dodgem.Dodgem(Model.GridPoint)
  nameWithType: Dodgem.Dodgem(GridPoint)
- uid: Model.Dodgem.#ctor*
  name: Dodgem
  href: api/Model.Dodgem.html#Model_Dodgem__ctor_
  commentId: Overload:Model.Dodgem.#ctor
  isSpec: "True"
  fullName: Model.Dodgem.Dodgem
  nameWithType: Dodgem.Dodgem
- uid: Model.Entity
  name: Entity
  href: api/Model.Entity.html
  commentId: T:Model.Entity
  fullName: Model.Entity
  nameWithType: Entity
- uid: Model.Entity.#ctor(Model.GridPoint,System.Int32,System.Int32)
  name: Entity(GridPoint, Int32, Int32)
  href: api/Model.Entity.html#Model_Entity__ctor_Model_GridPoint_System_Int32_System_Int32_
  commentId: M:Model.Entity.#ctor(Model.GridPoint,System.Int32,System.Int32)
  fullName: Model.Entity.Entity(Model.GridPoint, System.Int32, System.Int32)
  nameWithType: Entity.Entity(GridPoint, Int32, Int32)
- uid: Model.Entity.#ctor*
  name: Entity
  href: api/Model.Entity.html#Model_Entity__ctor_
  commentId: Overload:Model.Entity.#ctor
  isSpec: "True"
  fullName: Model.Entity.Entity
  nameWithType: Entity.Entity
- uid: Model.Entity.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  name: CanBePlacedOnLocation(GridPoint, Park)
  href: api/Model.Entity.html#Model_Entity_CanBePlacedOnLocation_Model_GridPoint_Model_Park_
  commentId: M:Model.Entity.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  fullName: Model.Entity.CanBePlacedOnLocation(Model.GridPoint, Model.Park)
  nameWithType: Entity.CanBePlacedOnLocation(GridPoint, Park)
- uid: Model.Entity.CanBePlacedOnLocation*
  name: CanBePlacedOnLocation
  href: api/Model.Entity.html#Model_Entity_CanBePlacedOnLocation_
  commentId: Overload:Model.Entity.CanBePlacedOnLocation
  isSpec: "True"
  fullName: Model.Entity.CanBePlacedOnLocation
  nameWithType: Entity.CanBePlacedOnLocation
- uid: Model.Entity.GetGridPoints
  name: GetGridPoints()
  href: api/Model.Entity.html#Model_Entity_GetGridPoints
  commentId: M:Model.Entity.GetGridPoints
  fullName: Model.Entity.GetGridPoints()
  nameWithType: Entity.GetGridPoints()
- uid: Model.Entity.GetGridPoints(Model.GridPoint)
  name: GetGridPoints(GridPoint)
  href: api/Model.Entity.html#Model_Entity_GetGridPoints_Model_GridPoint_
  commentId: M:Model.Entity.GetGridPoints(Model.GridPoint)
  fullName: Model.Entity.GetGridPoints(Model.GridPoint)
  nameWithType: Entity.GetGridPoints(GridPoint)
- uid: Model.Entity.GetGridPoints*
  name: GetGridPoints
  href: api/Model.Entity.html#Model_Entity_GetGridPoints_
  commentId: Overload:Model.Entity.GetGridPoints
  isSpec: "True"
  fullName: Model.Entity.GetGridPoints
  nameWithType: Entity.GetGridPoints
- uid: Model.Entity.HAPPINESS_WHEN_IN_FOODBUILDING
  name: HAPPINESS_WHEN_IN_FOODBUILDING
  href: api/Model.Entity.html#Model_Entity_HAPPINESS_WHEN_IN_FOODBUILDING
  commentId: F:Model.Entity.HAPPINESS_WHEN_IN_FOODBUILDING
  fullName: Model.Entity.HAPPINESS_WHEN_IN_FOODBUILDING
  nameWithType: Entity.HAPPINESS_WHEN_IN_FOODBUILDING
- uid: Model.Entity.HAPPINESSPOINT
  name: HAPPINESSPOINT
  href: api/Model.Entity.html#Model_Entity_HAPPINESSPOINT
  commentId: F:Model.Entity.HAPPINESSPOINT
  fullName: Model.Entity.HAPPINESSPOINT
  nameWithType: Entity.HAPPINESSPOINT
- uid: Model.Entity.Height
  name: Height
  href: api/Model.Entity.html#Model_Entity_Height
  commentId: P:Model.Entity.Height
  fullName: Model.Entity.Height
  nameWithType: Entity.Height
- uid: Model.Entity.Height*
  name: Height
  href: api/Model.Entity.html#Model_Entity_Height_
  commentId: Overload:Model.Entity.Height
  isSpec: "True"
  fullName: Model.Entity.Height
  nameWithType: Entity.Height
- uid: Model.Entity.HUNGERPOINT
  name: HUNGERPOINT
  href: api/Model.Entity.html#Model_Entity_HUNGERPOINT
  commentId: F:Model.Entity.HUNGERPOINT
  fullName: Model.Entity.HUNGERPOINT
  nameWithType: Entity.HUNGERPOINT
- uid: Model.Entity.Location
  name: Location
  href: api/Model.Entity.html#Model_Entity_Location
  commentId: P:Model.Entity.Location
  fullName: Model.Entity.Location
  nameWithType: Entity.Location
- uid: Model.Entity.Location*
  name: Location
  href: api/Model.Entity.html#Model_Entity_Location_
  commentId: Overload:Model.Entity.Location
  isSpec: "True"
  fullName: Model.Entity.Location
  nameWithType: Entity.Location
- uid: Model.Entity.LocationState
  name: LocationState
  href: api/Model.Entity.html#Model_Entity_LocationState
  commentId: P:Model.Entity.LocationState
  fullName: Model.Entity.LocationState
  nameWithType: Entity.LocationState
- uid: Model.Entity.LocationState*
  name: LocationState
  href: api/Model.Entity.html#Model_Entity_LocationState_
  commentId: Overload:Model.Entity.LocationState
  isSpec: "True"
  fullName: Model.Entity.LocationState
  nameWithType: Entity.LocationState
- uid: Model.Entity.MINUS_HAPPINESS_POINT_WHEN_WAITING
  name: MINUS_HAPPINESS_POINT_WHEN_WAITING
  href: api/Model.Entity.html#Model_Entity_MINUS_HAPPINESS_POINT_WHEN_WAITING
  commentId: F:Model.Entity.MINUS_HAPPINESS_POINT_WHEN_WAITING
  fullName: Model.Entity.MINUS_HAPPINESS_POINT_WHEN_WAITING
  nameWithType: Entity.MINUS_HAPPINESS_POINT_WHEN_WAITING
- uid: Model.Entity.MINUS_HAPPINESS_POINTS_WHEN_HUNGRY
  name: MINUS_HAPPINESS_POINTS_WHEN_HUNGRY
  href: api/Model.Entity.html#Model_Entity_MINUS_HAPPINESS_POINTS_WHEN_HUNGRY
  commentId: F:Model.Entity.MINUS_HAPPINESS_POINTS_WHEN_HUNGRY
  fullName: Model.Entity.MINUS_HAPPINESS_POINTS_WHEN_HUNGRY
  nameWithType: Entity.MINUS_HAPPINESS_POINTS_WHEN_HUNGRY
- uid: Model.Entity.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.Entity.html#Model_Entity_TimeAdvanced
  commentId: M:Model.Entity.TimeAdvanced
  fullName: Model.Entity.TimeAdvanced()
  nameWithType: Entity.TimeAdvanced()
- uid: Model.Entity.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.Entity.html#Model_Entity_TimeAdvanced_
  commentId: Overload:Model.Entity.TimeAdvanced
  isSpec: "True"
  fullName: Model.Entity.TimeAdvanced
  nameWithType: Entity.TimeAdvanced
- uid: Model.Entity.VISITOR_STARTING_MONEY_AMOUNT
  name: VISITOR_STARTING_MONEY_AMOUNT
  href: api/Model.Entity.html#Model_Entity_VISITOR_STARTING_MONEY_AMOUNT
  commentId: F:Model.Entity.VISITOR_STARTING_MONEY_AMOUNT
  fullName: Model.Entity.VISITOR_STARTING_MONEY_AMOUNT
  nameWithType: Entity.VISITOR_STARTING_MONEY_AMOUNT
- uid: Model.Entity.Width
  name: Width
  href: api/Model.Entity.html#Model_Entity_Width
  commentId: P:Model.Entity.Width
  fullName: Model.Entity.Width
  nameWithType: Entity.Width
- uid: Model.Entity.Width*
  name: Width
  href: api/Model.Entity.html#Model_Entity_Width_
  commentId: Overload:Model.Entity.Width
  isSpec: "True"
  fullName: Model.Entity.Width
  nameWithType: Entity.Width
- uid: Model.EventArguments
  name: Model.EventArguments
  href: api/Model.EventArguments.html
  commentId: N:Model.EventArguments
  fullName: Model.EventArguments
  nameWithType: Model.EventArguments
- uid: Model.EventArguments.MoveEventArgs
  name: MoveEventArgs
  href: api/Model.EventArguments.MoveEventArgs.html
  commentId: T:Model.EventArguments.MoveEventArgs
  fullName: Model.EventArguments.MoveEventArgs
  nameWithType: MoveEventArgs
- uid: Model.EventArguments.MoveEventArgs.#ctor(Model.GridPoint)
  name: MoveEventArgs(GridPoint)
  href: api/Model.EventArguments.MoveEventArgs.html#Model_EventArguments_MoveEventArgs__ctor_Model_GridPoint_
  commentId: M:Model.EventArguments.MoveEventArgs.#ctor(Model.GridPoint)
  fullName: Model.EventArguments.MoveEventArgs.MoveEventArgs(Model.GridPoint)
  nameWithType: MoveEventArgs.MoveEventArgs(GridPoint)
- uid: Model.EventArguments.MoveEventArgs.#ctor*
  name: MoveEventArgs
  href: api/Model.EventArguments.MoveEventArgs.html#Model_EventArguments_MoveEventArgs__ctor_
  commentId: Overload:Model.EventArguments.MoveEventArgs.#ctor
  isSpec: "True"
  fullName: Model.EventArguments.MoveEventArgs.MoveEventArgs
  nameWithType: MoveEventArgs.MoveEventArgs
- uid: Model.EventArguments.MoveEventArgs.NextPosition
  name: NextPosition
  href: api/Model.EventArguments.MoveEventArgs.html#Model_EventArguments_MoveEventArgs_NextPosition
  commentId: P:Model.EventArguments.MoveEventArgs.NextPosition
  fullName: Model.EventArguments.MoveEventArgs.NextPosition
  nameWithType: MoveEventArgs.NextPosition
- uid: Model.EventArguments.MoveEventArgs.NextPosition*
  name: NextPosition
  href: api/Model.EventArguments.MoveEventArgs.html#Model_EventArguments_MoveEventArgs_NextPosition_
  commentId: Overload:Model.EventArguments.MoveEventArgs.NextPosition
  isSpec: "True"
  fullName: Model.EventArguments.MoveEventArgs.NextPosition
  nameWithType: MoveEventArgs.NextPosition
- uid: Model.Facility
  name: Facility
  href: api/Model.Facility.html
  commentId: T:Model.Facility
  fullName: Model.Facility
  nameWithType: Facility
- uid: Model.Facility.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32)
  name: Facility(String, GridPoint, Int32, Int32, Int32)
  href: api/Model.Facility.html#Model_Facility__ctor_System_String_Model_GridPoint_System_Int32_System_Int32_System_Int32_
  commentId: M:Model.Facility.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32)
  fullName: Model.Facility.Facility(System.String, Model.GridPoint, System.Int32, System.Int32, System.Int32)
  nameWithType: Facility.Facility(String, GridPoint, Int32, Int32, Int32)
- uid: Model.Facility.#ctor*
  name: Facility
  href: api/Model.Facility.html#Model_Facility__ctor_
  commentId: Overload:Model.Facility.#ctor
  isSpec: "True"
  fullName: Model.Facility.Facility
  nameWithType: Facility.Facility
- uid: Model.Facility.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  name: CanBePlacedOnLocation(GridPoint, Park)
  href: api/Model.Facility.html#Model_Facility_CanBePlacedOnLocation_Model_GridPoint_Model_Park_
  commentId: M:Model.Facility.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  fullName: Model.Facility.CanBePlacedOnLocation(Model.GridPoint, Model.Park)
  nameWithType: Facility.CanBePlacedOnLocation(GridPoint, Park)
- uid: Model.Facility.CanBePlacedOnLocation*
  name: CanBePlacedOnLocation
  href: api/Model.Facility.html#Model_Facility_CanBePlacedOnLocation_
  commentId: Overload:Model.Facility.CanBePlacedOnLocation
  isSpec: "True"
  fullName: Model.Facility.CanBePlacedOnLocation
  nameWithType: Facility.CanBePlacedOnLocation
- uid: Model.Facility.Equals(System.Object)
  name: Equals(Object)
  href: api/Model.Facility.html#Model_Facility_Equals_System_Object_
  commentId: M:Model.Facility.Equals(System.Object)
  fullName: Model.Facility.Equals(System.Object)
  nameWithType: Facility.Equals(Object)
- uid: Model.Facility.Equals*
  name: Equals
  href: api/Model.Facility.html#Model_Facility_Equals_
  commentId: Overload:Model.Facility.Equals
  isSpec: "True"
  fullName: Model.Facility.Equals
  nameWithType: Facility.Equals
- uid: Model.Facility.GetBuildingsWithRoadToThis(Model.Map)
  name: GetBuildingsWithRoadToThis(Map)
  href: api/Model.Facility.html#Model_Facility_GetBuildingsWithRoadToThis_Model_Map_
  commentId: M:Model.Facility.GetBuildingsWithRoadToThis(Model.Map)
  fullName: Model.Facility.GetBuildingsWithRoadToThis(Model.Map)
  nameWithType: Facility.GetBuildingsWithRoadToThis(Map)
- uid: Model.Facility.GetBuildingsWithRoadToThis*
  name: GetBuildingsWithRoadToThis
  href: api/Model.Facility.html#Model_Facility_GetBuildingsWithRoadToThis_
  commentId: Overload:Model.Facility.GetBuildingsWithRoadToThis
  isSpec: "True"
  fullName: Model.Facility.GetBuildingsWithRoadToThis
  nameWithType: Facility.GetBuildingsWithRoadToThis
- uid: Model.Facility.GetHashCode
  name: GetHashCode()
  href: api/Model.Facility.html#Model_Facility_GetHashCode
  commentId: M:Model.Facility.GetHashCode
  fullName: Model.Facility.GetHashCode()
  nameWithType: Facility.GetHashCode()
- uid: Model.Facility.GetHashCode*
  name: GetHashCode
  href: api/Model.Facility.html#Model_Facility_GetHashCode_
  commentId: Overload:Model.Facility.GetHashCode
  isSpec: "True"
  fullName: Model.Facility.GetHashCode
  nameWithType: Facility.GetHashCode
- uid: Model.Facility.LocationOnMap
  name: LocationOnMap
  href: api/Model.Facility.html#Model_Facility_LocationOnMap
  commentId: P:Model.Facility.LocationOnMap
  fullName: Model.Facility.LocationOnMap
  nameWithType: Facility.LocationOnMap
- uid: Model.Facility.LocationOnMap*
  name: LocationOnMap
  href: api/Model.Facility.html#Model_Facility_LocationOnMap_
  commentId: Overload:Model.Facility.LocationOnMap
  isSpec: "True"
  fullName: Model.Facility.LocationOnMap
  nameWithType: Facility.LocationOnMap
- uid: Model.Facility.Status
  name: Status
  href: api/Model.Facility.html#Model_Facility_Status
  commentId: P:Model.Facility.Status
  fullName: Model.Facility.Status
  nameWithType: Facility.Status
- uid: Model.Facility.Status*
  name: Status
  href: api/Model.Facility.html#Model_Facility_Status_
  commentId: Overload:Model.Facility.Status
  isSpec: "True"
  fullName: Model.Facility.Status
  nameWithType: Facility.Status
- uid: Model.Facility.StatusState
  name: StatusState
  href: api/Model.Facility.html#Model_Facility_StatusState
  commentId: P:Model.Facility.StatusState
  fullName: Model.Facility.StatusState
  nameWithType: Facility.StatusState
- uid: Model.Facility.StatusState*
  name: StatusState
  href: api/Model.Facility.html#Model_Facility_StatusState_
  commentId: Overload:Model.Facility.StatusState
  isSpec: "True"
  fullName: Model.Facility.StatusState
  nameWithType: Facility.StatusState
- uid: Model.FacilityStatus
  name: FacilityStatus
  href: api/Model.FacilityStatus.html
  commentId: T:Model.FacilityStatus
  fullName: Model.FacilityStatus
  nameWithType: FacilityStatus
- uid: Model.FacilityStatus.Broken
  name: Broken
  href: api/Model.FacilityStatus.html#Model_FacilityStatus_Broken
  commentId: F:Model.FacilityStatus.Broken
  fullName: Model.FacilityStatus.Broken
  nameWithType: FacilityStatus.Broken
- uid: Model.FacilityStatus.Building
  name: Building
  href: api/Model.FacilityStatus.html#Model_FacilityStatus_Building
  commentId: F:Model.FacilityStatus.Building
  fullName: Model.FacilityStatus.Building
  nameWithType: FacilityStatus.Building
- uid: Model.FacilityStatus.Repairing
  name: Repairing
  href: api/Model.FacilityStatus.html#Model_FacilityStatus_Repairing
  commentId: F:Model.FacilityStatus.Repairing
  fullName: Model.FacilityStatus.Repairing
  nameWithType: FacilityStatus.Repairing
- uid: Model.FacilityStatus.Waiting
  name: Waiting
  href: api/Model.FacilityStatus.html#Model_FacilityStatus_Waiting
  commentId: F:Model.FacilityStatus.Waiting
  fullName: Model.FacilityStatus.Waiting
  nameWithType: FacilityStatus.Waiting
- uid: Model.FacilityStatus.WaitingForMaintenanceWorker
  name: WaitingForMaintenanceWorker
  href: api/Model.FacilityStatus.html#Model_FacilityStatus_WaitingForMaintenanceWorker
  commentId: F:Model.FacilityStatus.WaitingForMaintenanceWorker
  fullName: Model.FacilityStatus.WaitingForMaintenanceWorker
  nameWithType: FacilityStatus.WaitingForMaintenanceWorker
- uid: Model.FacilityStatus.Working
  name: Working
  href: api/Model.FacilityStatus.html#Model_FacilityStatus_Working
  commentId: F:Model.FacilityStatus.Working
  fullName: Model.FacilityStatus.Working
  nameWithType: FacilityStatus.Working
- uid: Model.FerrisWheel
  name: FerrisWheel
  href: api/Model.FerrisWheel.html
  commentId: T:Model.FerrisWheel
  fullName: Model.FerrisWheel
  nameWithType: FerrisWheel
- uid: Model.FerrisWheel.#ctor
  name: FerrisWheel()
  href: api/Model.FerrisWheel.html#Model_FerrisWheel__ctor
  commentId: M:Model.FerrisWheel.#ctor
  fullName: Model.FerrisWheel.FerrisWheel()
  nameWithType: FerrisWheel.FerrisWheel()
- uid: Model.FerrisWheel.#ctor(Model.GridPoint)
  name: FerrisWheel(GridPoint)
  href: api/Model.FerrisWheel.html#Model_FerrisWheel__ctor_Model_GridPoint_
  commentId: M:Model.FerrisWheel.#ctor(Model.GridPoint)
  fullName: Model.FerrisWheel.FerrisWheel(Model.GridPoint)
  nameWithType: FerrisWheel.FerrisWheel(GridPoint)
- uid: Model.FerrisWheel.#ctor*
  name: FerrisWheel
  href: api/Model.FerrisWheel.html#Model_FerrisWheel__ctor_
  commentId: Overload:Model.FerrisWheel.#ctor
  isSpec: "True"
  fullName: Model.FerrisWheel.FerrisWheel
  nameWithType: FerrisWheel.FerrisWheel
- uid: Model.FoodBuilding
  name: FoodBuilding
  href: api/Model.FoodBuilding.html
  commentId: T:Model.FoodBuilding
  fullName: Model.FoodBuilding
  nameWithType: FoodBuilding
- uid: Model.FoodBuilding.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32)
  name: FoodBuilding(String, GridPoint, Int32, Int32, Int32)
  href: api/Model.FoodBuilding.html#Model_FoodBuilding__ctor_System_String_Model_GridPoint_System_Int32_System_Int32_System_Int32_
  commentId: M:Model.FoodBuilding.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32)
  fullName: Model.FoodBuilding.FoodBuilding(System.String, Model.GridPoint, System.Int32, System.Int32, System.Int32)
  nameWithType: FoodBuilding.FoodBuilding(String, GridPoint, Int32, Int32, Int32)
- uid: Model.FoodBuilding.#ctor*
  name: FoodBuilding
  href: api/Model.FoodBuilding.html#Model_FoodBuilding__ctor_
  commentId: Overload:Model.FoodBuilding.#ctor
  isSpec: "True"
  fullName: Model.FoodBuilding.FoodBuilding
  nameWithType: FoodBuilding.FoodBuilding
- uid: Model.FoodBuilding.HungerFactor
  name: HungerFactor
  href: api/Model.FoodBuilding.html#Model_FoodBuilding_HungerFactor
  commentId: P:Model.FoodBuilding.HungerFactor
  fullName: Model.FoodBuilding.HungerFactor
  nameWithType: FoodBuilding.HungerFactor
- uid: Model.FoodBuilding.HungerFactor*
  name: HungerFactor
  href: api/Model.FoodBuilding.html#Model_FoodBuilding_HungerFactor_
  commentId: Overload:Model.FoodBuilding.HungerFactor
  isSpec: "True"
  fullName: Model.FoodBuilding.HungerFactor
  nameWithType: FoodBuilding.HungerFactor
- uid: Model.Game
  name: Game
  href: api/Model.Game.html
  commentId: T:Model.Game
  fullName: Model.Game
  nameWithType: Game
- uid: Model.Game.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32,System.Drawing.Point)
  name: Game(String, GridPoint, Int32, Int32, Int32, Point)
  href: api/Model.Game.html#Model_Game__ctor_System_String_Model_GridPoint_System_Int32_System_Int32_System_Int32_System_Drawing_Point_
  commentId: M:Model.Game.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32,System.Drawing.Point)
  fullName: Model.Game.Game(System.String, Model.GridPoint, System.Int32, System.Int32, System.Int32, System.Drawing.Point)
  nameWithType: Game.Game(String, GridPoint, Int32, Int32, Int32, Point)
- uid: Model.Game.#ctor*
  name: Game
  href: api/Model.Game.html#Model_Game__ctor_
  commentId: Overload:Model.Game.#ctor
  isSpec: "True"
  fullName: Model.Game.Game
  nameWithType: Game.Game
- uid: Model.Game.HappinessFactor
  name: HappinessFactor
  href: api/Model.Game.html#Model_Game_HappinessFactor
  commentId: P:Model.Game.HappinessFactor
  fullName: Model.Game.HappinessFactor
  nameWithType: Game.HappinessFactor
- uid: Model.Game.HappinessFactor*
  name: HappinessFactor
  href: api/Model.Game.html#Model_Game_HappinessFactor_
  commentId: Overload:Model.Game.HappinessFactor
  isSpec: "True"
  fullName: Model.Game.HappinessFactor
  nameWithType: Game.HappinessFactor
- uid: Model.GameModel
  name: GameModel
  href: api/Model.GameModel.html
  commentId: T:Model.GameModel
  fullName: Model.GameModel
  nameWithType: GameModel
- uid: Model.GameModel.#ctor(Model.IPersistence)
  name: GameModel(IPersistence)
  href: api/Model.GameModel.html#Model_GameModel__ctor_Model_IPersistence_
  commentId: M:Model.GameModel.#ctor(Model.IPersistence)
  fullName: Model.GameModel.GameModel(Model.IPersistence)
  nameWithType: GameModel.GameModel(IPersistence)
- uid: Model.GameModel.#ctor*
  name: GameModel
  href: api/Model.GameModel.html#Model_GameModel__ctor_
  commentId: Overload:Model.GameModel.#ctor
  isSpec: "True"
  fullName: Model.GameModel.GameModel
  nameWithType: GameModel.GameModel
- uid: Model.GameModel.NewGame(System.String)
  name: NewGame(String)
  href: api/Model.GameModel.html#Model_GameModel_NewGame_System_String_
  commentId: M:Model.GameModel.NewGame(System.String)
  fullName: Model.GameModel.NewGame(System.String)
  nameWithType: GameModel.NewGame(String)
- uid: Model.GameModel.NewGame*
  name: NewGame
  href: api/Model.GameModel.html#Model_GameModel_NewGame_
  commentId: Overload:Model.GameModel.NewGame
  isSpec: "True"
  fullName: Model.GameModel.NewGame
  nameWithType: GameModel.NewGame
- uid: Model.GameModel.OpenGameAsync(System.String)
  name: OpenGameAsync(String)
  href: api/Model.GameModel.html#Model_GameModel_OpenGameAsync_System_String_
  commentId: M:Model.GameModel.OpenGameAsync(System.String)
  fullName: Model.GameModel.OpenGameAsync(System.String)
  nameWithType: GameModel.OpenGameAsync(String)
- uid: Model.GameModel.OpenGameAsync*
  name: OpenGameAsync
  href: api/Model.GameModel.html#Model_GameModel_OpenGameAsync_
  commentId: Overload:Model.GameModel.OpenGameAsync
  isSpec: "True"
  fullName: Model.GameModel.OpenGameAsync
  nameWithType: GameModel.OpenGameAsync
- uid: Model.GameModel.OpenOrClosePark
  name: OpenOrClosePark()
  href: api/Model.GameModel.html#Model_GameModel_OpenOrClosePark
  commentId: M:Model.GameModel.OpenOrClosePark
  fullName: Model.GameModel.OpenOrClosePark()
  nameWithType: GameModel.OpenOrClosePark()
- uid: Model.GameModel.OpenOrClosePark*
  name: OpenOrClosePark
  href: api/Model.GameModel.html#Model_GameModel_OpenOrClosePark_
  commentId: Overload:Model.GameModel.OpenOrClosePark
  isSpec: "True"
  fullName: Model.GameModel.OpenOrClosePark
  nameWithType: GameModel.OpenOrClosePark
- uid: Model.GameModel.Park
  name: Park
  href: api/Model.GameModel.html#Model_GameModel_Park
  commentId: P:Model.GameModel.Park
  fullName: Model.GameModel.Park
  nameWithType: GameModel.Park
- uid: Model.GameModel.Park*
  name: Park
  href: api/Model.GameModel.html#Model_GameModel_Park_
  commentId: Overload:Model.GameModel.Park
  isSpec: "True"
  fullName: Model.GameModel.Park
  nameWithType: GameModel.Park
- uid: Model.GameModel.ParkState
  name: ParkState
  href: api/Model.GameModel.html#Model_GameModel_ParkState
  commentId: P:Model.GameModel.ParkState
  fullName: Model.GameModel.ParkState
  nameWithType: GameModel.ParkState
- uid: Model.GameModel.ParkState*
  name: ParkState
  href: api/Model.GameModel.html#Model_GameModel_ParkState_
  commentId: Overload:Model.GameModel.ParkState
  isSpec: "True"
  fullName: Model.GameModel.ParkState
  nameWithType: GameModel.ParkState
- uid: Model.GameModel.SaveGameAsync(System.String)
  name: SaveGameAsync(String)
  href: api/Model.GameModel.html#Model_GameModel_SaveGameAsync_System_String_
  commentId: M:Model.GameModel.SaveGameAsync(System.String)
  fullName: Model.GameModel.SaveGameAsync(System.String)
  nameWithType: GameModel.SaveGameAsync(String)
- uid: Model.GameModel.SaveGameAsync*
  name: SaveGameAsync
  href: api/Model.GameModel.html#Model_GameModel_SaveGameAsync_
  commentId: Overload:Model.GameModel.SaveGameAsync
  isSpec: "True"
  fullName: Model.GameModel.SaveGameAsync
  nameWithType: GameModel.SaveGameAsync
- uid: Model.GameModel.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.GameModel.html#Model_GameModel_TimeAdvanced
  commentId: M:Model.GameModel.TimeAdvanced
  fullName: Model.GameModel.TimeAdvanced()
  nameWithType: GameModel.TimeAdvanced()
- uid: Model.GameModel.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.GameModel.html#Model_GameModel_TimeAdvanced_
  commentId: Overload:Model.GameModel.TimeAdvanced
  isSpec: "True"
  fullName: Model.GameModel.TimeAdvanced
  nameWithType: GameModel.TimeAdvanced
- uid: Model.Gate
  name: Gate
  href: api/Model.Gate.html
  commentId: T:Model.Gate
  fullName: Model.Gate
  nameWithType: Gate
- uid: Model.Gate.Instance
  name: Instance
  href: api/Model.Gate.html#Model_Gate_Instance
  commentId: P:Model.Gate.Instance
  fullName: Model.Gate.Instance
  nameWithType: Gate.Instance
- uid: Model.Gate.Instance*
  name: Instance
  href: api/Model.Gate.html#Model_Gate_Instance_
  commentId: Overload:Model.Gate.Instance
  isSpec: "True"
  fullName: Model.Gate.Instance
  nameWithType: Gate.Instance
- uid: Model.Gate.TryUsing(Model.Visitor)
  name: TryUsing(Visitor)
  href: api/Model.Gate.html#Model_Gate_TryUsing_Model_Visitor_
  commentId: M:Model.Gate.TryUsing(Model.Visitor)
  fullName: Model.Gate.TryUsing(Model.Visitor)
  nameWithType: Gate.TryUsing(Visitor)
- uid: Model.Gate.TryUsing*
  name: TryUsing
  href: api/Model.Gate.html#Model_Gate_TryUsing_
  commentId: Overload:Model.Gate.TryUsing
  isSpec: "True"
  fullName: Model.Gate.TryUsing
  nameWithType: Gate.TryUsing
- uid: Model.Gate.VisitorLeaving
  name: VisitorLeaving
  href: api/Model.Gate.html#Model_Gate_VisitorLeaving
  commentId: E:Model.Gate.VisitorLeaving
  fullName: Model.Gate.VisitorLeaving
  nameWithType: Gate.VisitorLeaving
- uid: Model.GiantSwing
  name: GiantSwing
  href: api/Model.GiantSwing.html
  commentId: T:Model.GiantSwing
  fullName: Model.GiantSwing
  nameWithType: GiantSwing
- uid: Model.GiantSwing.#ctor
  name: GiantSwing()
  href: api/Model.GiantSwing.html#Model_GiantSwing__ctor
  commentId: M:Model.GiantSwing.#ctor
  fullName: Model.GiantSwing.GiantSwing()
  nameWithType: GiantSwing.GiantSwing()
- uid: Model.GiantSwing.#ctor(Model.GridPoint)
  name: GiantSwing(GridPoint)
  href: api/Model.GiantSwing.html#Model_GiantSwing__ctor_Model_GridPoint_
  commentId: M:Model.GiantSwing.#ctor(Model.GridPoint)
  fullName: Model.GiantSwing.GiantSwing(Model.GridPoint)
  nameWithType: GiantSwing.GiantSwing(GridPoint)
- uid: Model.GiantSwing.#ctor*
  name: GiantSwing
  href: api/Model.GiantSwing.html#Model_GiantSwing__ctor_
  commentId: Overload:Model.GiantSwing.#ctor
  isSpec: "True"
  fullName: Model.GiantSwing.GiantSwing
  nameWithType: GiantSwing.GiantSwing
- uid: Model.GridPoint
  name: GridPoint
  href: api/Model.GridPoint.html
  commentId: T:Model.GridPoint
  fullName: Model.GridPoint
  nameWithType: GridPoint
- uid: Model.GridPoint.#ctor(System.Drawing.Point)
  name: GridPoint(Point)
  href: api/Model.GridPoint.html#Model_GridPoint__ctor_System_Drawing_Point_
  commentId: M:Model.GridPoint.#ctor(System.Drawing.Point)
  fullName: Model.GridPoint.GridPoint(System.Drawing.Point)
  nameWithType: GridPoint.GridPoint(Point)
- uid: Model.GridPoint.#ctor(System.Int32,System.Int32)
  name: GridPoint(Int32, Int32)
  href: api/Model.GridPoint.html#Model_GridPoint__ctor_System_Int32_System_Int32_
  commentId: M:Model.GridPoint.#ctor(System.Int32,System.Int32)
  fullName: Model.GridPoint.GridPoint(System.Int32, System.Int32)
  nameWithType: GridPoint.GridPoint(Int32, Int32)
- uid: Model.GridPoint.#ctor*
  name: GridPoint
  href: api/Model.GridPoint.html#Model_GridPoint__ctor_
  commentId: Overload:Model.GridPoint.#ctor
  isSpec: "True"
  fullName: Model.GridPoint.GridPoint
  nameWithType: GridPoint.GridPoint
- uid: Model.GridPoint.Column
  name: Column
  href: api/Model.GridPoint.html#Model_GridPoint_Column
  commentId: P:Model.GridPoint.Column
  fullName: Model.GridPoint.Column
  nameWithType: GridPoint.Column
- uid: Model.GridPoint.Column*
  name: Column
  href: api/Model.GridPoint.html#Model_GridPoint_Column_
  commentId: Overload:Model.GridPoint.Column
  isSpec: "True"
  fullName: Model.GridPoint.Column
  nameWithType: GridPoint.Column
- uid: Model.GridPoint.Equals(System.Object)
  name: Equals(Object)
  href: api/Model.GridPoint.html#Model_GridPoint_Equals_System_Object_
  commentId: M:Model.GridPoint.Equals(System.Object)
  fullName: Model.GridPoint.Equals(System.Object)
  nameWithType: GridPoint.Equals(Object)
- uid: Model.GridPoint.Equals*
  name: Equals
  href: api/Model.GridPoint.html#Model_GridPoint_Equals_
  commentId: Overload:Model.GridPoint.Equals
  isSpec: "True"
  fullName: Model.GridPoint.Equals
  nameWithType: GridPoint.Equals
- uid: Model.GridPoint.GetHashCode
  name: GetHashCode()
  href: api/Model.GridPoint.html#Model_GridPoint_GetHashCode
  commentId: M:Model.GridPoint.GetHashCode
  fullName: Model.GridPoint.GetHashCode()
  nameWithType: GridPoint.GetHashCode()
- uid: Model.GridPoint.GetHashCode*
  name: GetHashCode
  href: api/Model.GridPoint.html#Model_GridPoint_GetHashCode_
  commentId: Overload:Model.GridPoint.GetHashCode
  isSpec: "True"
  fullName: Model.GridPoint.GetHashCode
  nameWithType: GridPoint.GetHashCode
- uid: Model.GridPoint.IsInField(System.Int32)
  name: IsInField(Int32)
  href: api/Model.GridPoint.html#Model_GridPoint_IsInField_System_Int32_
  commentId: M:Model.GridPoint.IsInField(System.Int32)
  fullName: Model.GridPoint.IsInField(System.Int32)
  nameWithType: GridPoint.IsInField(Int32)
- uid: Model.GridPoint.IsInField*
  name: IsInField
  href: api/Model.GridPoint.html#Model_GridPoint_IsInField_
  commentId: Overload:Model.GridPoint.IsInField
  isSpec: "True"
  fullName: Model.GridPoint.IsInField
  nameWithType: GridPoint.IsInField
- uid: Model.GridPoint.op_Addition(Model.GridPoint,Model.GridPoint)
  name: Addition(GridPoint, GridPoint)
  href: api/Model.GridPoint.html#Model_GridPoint_op_Addition_Model_GridPoint_Model_GridPoint_
  commentId: M:Model.GridPoint.op_Addition(Model.GridPoint,Model.GridPoint)
  fullName: Model.GridPoint.Addition(Model.GridPoint, Model.GridPoint)
  nameWithType: GridPoint.Addition(GridPoint, GridPoint)
- uid: Model.GridPoint.op_Addition*
  name: Addition
  href: api/Model.GridPoint.html#Model_GridPoint_op_Addition_
  commentId: Overload:Model.GridPoint.op_Addition
  isSpec: "True"
  fullName: Model.GridPoint.Addition
  nameWithType: GridPoint.Addition
- uid: Model.GridPoint.op_Equality(Model.GridPoint,Model.GridPoint)
  name: Equality(GridPoint, GridPoint)
  href: api/Model.GridPoint.html#Model_GridPoint_op_Equality_Model_GridPoint_Model_GridPoint_
  commentId: M:Model.GridPoint.op_Equality(Model.GridPoint,Model.GridPoint)
  fullName: Model.GridPoint.Equality(Model.GridPoint, Model.GridPoint)
  nameWithType: GridPoint.Equality(GridPoint, GridPoint)
- uid: Model.GridPoint.op_Equality*
  name: Equality
  href: api/Model.GridPoint.html#Model_GridPoint_op_Equality_
  commentId: Overload:Model.GridPoint.op_Equality
  isSpec: "True"
  fullName: Model.GridPoint.Equality
  nameWithType: GridPoint.Equality
- uid: Model.GridPoint.op_Inequality(Model.GridPoint,Model.GridPoint)
  name: Inequality(GridPoint, GridPoint)
  href: api/Model.GridPoint.html#Model_GridPoint_op_Inequality_Model_GridPoint_Model_GridPoint_
  commentId: M:Model.GridPoint.op_Inequality(Model.GridPoint,Model.GridPoint)
  fullName: Model.GridPoint.Inequality(Model.GridPoint, Model.GridPoint)
  nameWithType: GridPoint.Inequality(GridPoint, GridPoint)
- uid: Model.GridPoint.op_Inequality*
  name: Inequality
  href: api/Model.GridPoint.html#Model_GridPoint_op_Inequality_
  commentId: Overload:Model.GridPoint.op_Inequality
  isSpec: "True"
  fullName: Model.GridPoint.Inequality
  nameWithType: GridPoint.Inequality
- uid: Model.GridPoint.Row
  name: Row
  href: api/Model.GridPoint.html#Model_GridPoint_Row
  commentId: P:Model.GridPoint.Row
  fullName: Model.GridPoint.Row
  nameWithType: GridPoint.Row
- uid: Model.GridPoint.Row*
  name: Row
  href: api/Model.GridPoint.html#Model_GridPoint_Row_
  commentId: Overload:Model.GridPoint.Row
  isSpec: "True"
  fullName: Model.GridPoint.Row
  nameWithType: GridPoint.Row
- uid: Model.GridPoint.ToString
  name: ToString()
  href: api/Model.GridPoint.html#Model_GridPoint_ToString
  commentId: M:Model.GridPoint.ToString
  fullName: Model.GridPoint.ToString()
  nameWithType: GridPoint.ToString()
- uid: Model.GridPoint.ToString*
  name: ToString
  href: api/Model.GridPoint.html#Model_GridPoint_ToString_
  commentId: Overload:Model.GridPoint.ToString
  isSpec: "True"
  fullName: Model.GridPoint.ToString
  nameWithType: GridPoint.ToString
- uid: Model.HuntedHouse
  name: HuntedHouse
  href: api/Model.HuntedHouse.html
  commentId: T:Model.HuntedHouse
  fullName: Model.HuntedHouse
  nameWithType: HuntedHouse
- uid: Model.HuntedHouse.#ctor
  name: HuntedHouse()
  href: api/Model.HuntedHouse.html#Model_HuntedHouse__ctor
  commentId: M:Model.HuntedHouse.#ctor
  fullName: Model.HuntedHouse.HuntedHouse()
  nameWithType: HuntedHouse.HuntedHouse()
- uid: Model.HuntedHouse.#ctor(Model.GridPoint)
  name: HuntedHouse(GridPoint)
  href: api/Model.HuntedHouse.html#Model_HuntedHouse__ctor_Model_GridPoint_
  commentId: M:Model.HuntedHouse.#ctor(Model.GridPoint)
  fullName: Model.HuntedHouse.HuntedHouse(Model.GridPoint)
  nameWithType: HuntedHouse.HuntedHouse(GridPoint)
- uid: Model.HuntedHouse.#ctor*
  name: HuntedHouse
  href: api/Model.HuntedHouse.html#Model_HuntedHouse__ctor_
  commentId: Overload:Model.HuntedHouse.#ctor
  isSpec: "True"
  fullName: Model.HuntedHouse.HuntedHouse
  nameWithType: HuntedHouse.HuntedHouse
- uid: Model.IceCreamStand
  name: IceCreamStand
  href: api/Model.IceCreamStand.html
  commentId: T:Model.IceCreamStand
  fullName: Model.IceCreamStand
  nameWithType: IceCreamStand
- uid: Model.IceCreamStand.#ctor
  name: IceCreamStand()
  href: api/Model.IceCreamStand.html#Model_IceCreamStand__ctor
  commentId: M:Model.IceCreamStand.#ctor
  fullName: Model.IceCreamStand.IceCreamStand()
  nameWithType: IceCreamStand.IceCreamStand()
- uid: Model.IceCreamStand.#ctor(Model.GridPoint)
  name: IceCreamStand(GridPoint)
  href: api/Model.IceCreamStand.html#Model_IceCreamStand__ctor_Model_GridPoint_
  commentId: M:Model.IceCreamStand.#ctor(Model.GridPoint)
  fullName: Model.IceCreamStand.IceCreamStand(Model.GridPoint)
  nameWithType: IceCreamStand.IceCreamStand(GridPoint)
- uid: Model.IceCreamStand.#ctor*
  name: IceCreamStand
  href: api/Model.IceCreamStand.html#Model_IceCreamStand__ctor_
  commentId: Overload:Model.IceCreamStand.#ctor
  isSpec: "True"
  fullName: Model.IceCreamStand.IceCreamStand
  nameWithType: IceCreamStand.IceCreamStand
- uid: Model.IPersistence
  name: IPersistence
  href: api/Model.IPersistence.html
  commentId: T:Model.IPersistence
  fullName: Model.IPersistence
  nameWithType: IPersistence
- uid: Model.IPersistence.LoadGameAsync(System.String)
  name: LoadGameAsync(String)
  href: api/Model.IPersistence.html#Model_IPersistence_LoadGameAsync_System_String_
  commentId: M:Model.IPersistence.LoadGameAsync(System.String)
  fullName: Model.IPersistence.LoadGameAsync(System.String)
  nameWithType: IPersistence.LoadGameAsync(String)
- uid: Model.IPersistence.LoadGameAsync*
  name: LoadGameAsync
  href: api/Model.IPersistence.html#Model_IPersistence_LoadGameAsync_
  commentId: Overload:Model.IPersistence.LoadGameAsync
  isSpec: "True"
  fullName: Model.IPersistence.LoadGameAsync
  nameWithType: IPersistence.LoadGameAsync
- uid: Model.IPersistence.Path
  name: Path
  href: api/Model.IPersistence.html#Model_IPersistence_Path
  commentId: P:Model.IPersistence.Path
  fullName: Model.IPersistence.Path
  nameWithType: IPersistence.Path
- uid: Model.IPersistence.Path*
  name: Path
  href: api/Model.IPersistence.html#Model_IPersistence_Path_
  commentId: Overload:Model.IPersistence.Path
  isSpec: "True"
  fullName: Model.IPersistence.Path
  nameWithType: IPersistence.Path
- uid: Model.IPersistence.Reset
  name: Reset()
  href: api/Model.IPersistence.html#Model_IPersistence_Reset
  commentId: M:Model.IPersistence.Reset
  fullName: Model.IPersistence.Reset()
  nameWithType: IPersistence.Reset()
- uid: Model.IPersistence.Reset*
  name: Reset
  href: api/Model.IPersistence.html#Model_IPersistence_Reset_
  commentId: Overload:Model.IPersistence.Reset
  isSpec: "True"
  fullName: Model.IPersistence.Reset
  nameWithType: IPersistence.Reset
- uid: Model.IPersistence.SaveGameAsync(System.String,Model.Park)
  name: SaveGameAsync(String, Park)
  href: api/Model.IPersistence.html#Model_IPersistence_SaveGameAsync_System_String_Model_Park_
  commentId: M:Model.IPersistence.SaveGameAsync(System.String,Model.Park)
  fullName: Model.IPersistence.SaveGameAsync(System.String, Model.Park)
  nameWithType: IPersistence.SaveGameAsync(String, Park)
- uid: Model.IPersistence.SaveGameAsync*
  name: SaveGameAsync
  href: api/Model.IPersistence.html#Model_IPersistence_SaveGameAsync_
  commentId: Overload:Model.IPersistence.SaveGameAsync
  isSpec: "True"
  fullName: Model.IPersistence.SaveGameAsync
  nameWithType: IPersistence.SaveGameAsync
- uid: Model.MaintenanceWorker
  name: MaintenanceWorker
  href: api/Model.MaintenanceWorker.html
  commentId: T:Model.MaintenanceWorker
  fullName: Model.MaintenanceWorker
  nameWithType: MaintenanceWorker
- uid: Model.MaintenanceWorker.#ctor
  name: MaintenanceWorker()
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker__ctor
  commentId: M:Model.MaintenanceWorker.#ctor
  fullName: Model.MaintenanceWorker.MaintenanceWorker()
  nameWithType: MaintenanceWorker.MaintenanceWorker()
- uid: Model.MaintenanceWorker.#ctor(Model.GridPoint)
  name: MaintenanceWorker(GridPoint)
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker__ctor_Model_GridPoint_
  commentId: M:Model.MaintenanceWorker.#ctor(Model.GridPoint)
  fullName: Model.MaintenanceWorker.MaintenanceWorker(Model.GridPoint)
  nameWithType: MaintenanceWorker.MaintenanceWorker(GridPoint)
- uid: Model.MaintenanceWorker.#ctor*
  name: MaintenanceWorker
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker__ctor_
  commentId: Overload:Model.MaintenanceWorker.#ctor
  isSpec: "True"
  fullName: Model.MaintenanceWorker.MaintenanceWorker
  nameWithType: MaintenanceWorker.MaintenanceWorker
- uid: Model.MaintenanceWorker.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  name: CanBePlacedOnLocation(GridPoint, Park)
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_CanBePlacedOnLocation_Model_GridPoint_Model_Park_
  commentId: M:Model.MaintenanceWorker.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  fullName: Model.MaintenanceWorker.CanBePlacedOnLocation(Model.GridPoint, Model.Park)
  nameWithType: MaintenanceWorker.CanBePlacedOnLocation(GridPoint, Park)
- uid: Model.MaintenanceWorker.CanBePlacedOnLocation*
  name: CanBePlacedOnLocation
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_CanBePlacedOnLocation_
  commentId: Overload:Model.MaintenanceWorker.CanBePlacedOnLocation
  isSpec: "True"
  fullName: Model.MaintenanceWorker.CanBePlacedOnLocation
  nameWithType: MaintenanceWorker.CanBePlacedOnLocation
- uid: Model.MaintenanceWorker.ChooseDestination
  name: ChooseDestination()
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_ChooseDestination
  commentId: M:Model.MaintenanceWorker.ChooseDestination
  fullName: Model.MaintenanceWorker.ChooseDestination()
  nameWithType: MaintenanceWorker.ChooseDestination()
- uid: Model.MaintenanceWorker.ChooseDestination*
  name: ChooseDestination
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_ChooseDestination_
  commentId: Overload:Model.MaintenanceWorker.ChooseDestination
  isSpec: "True"
  fullName: Model.MaintenanceWorker.ChooseDestination
  nameWithType: MaintenanceWorker.ChooseDestination
- uid: Model.MaintenanceWorker.RepairBuilding(Model.Building)
  name: RepairBuilding(Building)
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_RepairBuilding_Model_Building_
  commentId: M:Model.MaintenanceWorker.RepairBuilding(Model.Building)
  fullName: Model.MaintenanceWorker.RepairBuilding(Model.Building)
  nameWithType: MaintenanceWorker.RepairBuilding(Building)
- uid: Model.MaintenanceWorker.RepairBuilding*
  name: RepairBuilding
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_RepairBuilding_
  commentId: Overload:Model.MaintenanceWorker.RepairBuilding
  isSpec: "True"
  fullName: Model.MaintenanceWorker.RepairBuilding
  nameWithType: MaintenanceWorker.RepairBuilding
- uid: Model.MaintenanceWorker.Status
  name: Status
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_Status
  commentId: P:Model.MaintenanceWorker.Status
  fullName: Model.MaintenanceWorker.Status
  nameWithType: MaintenanceWorker.Status
- uid: Model.MaintenanceWorker.Status*
  name: Status
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_Status_
  commentId: Overload:Model.MaintenanceWorker.Status
  isSpec: "True"
  fullName: Model.MaintenanceWorker.Status
  nameWithType: MaintenanceWorker.Status
- uid: Model.MaintenanceWorker.StatusState
  name: StatusState
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_StatusState
  commentId: P:Model.MaintenanceWorker.StatusState
  fullName: Model.MaintenanceWorker.StatusState
  nameWithType: MaintenanceWorker.StatusState
- uid: Model.MaintenanceWorker.StatusState*
  name: StatusState
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_StatusState_
  commentId: Overload:Model.MaintenanceWorker.StatusState
  isSpec: "True"
  fullName: Model.MaintenanceWorker.StatusState
  nameWithType: MaintenanceWorker.StatusState
- uid: Model.MaintenanceWorker.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_TimeAdvanced
  commentId: M:Model.MaintenanceWorker.TimeAdvanced
  fullName: Model.MaintenanceWorker.TimeAdvanced()
  nameWithType: MaintenanceWorker.TimeAdvanced()
- uid: Model.MaintenanceWorker.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_TimeAdvanced_
  commentId: Overload:Model.MaintenanceWorker.TimeAdvanced
  isSpec: "True"
  fullName: Model.MaintenanceWorker.TimeAdvanced
  nameWithType: MaintenanceWorker.TimeAdvanced
- uid: Model.MaintenanceWorker.WorkerMoving
  name: WorkerMoving
  href: api/Model.MaintenanceWorker.html#Model_MaintenanceWorker_WorkerMoving
  commentId: E:Model.MaintenanceWorker.WorkerMoving
  fullName: Model.MaintenanceWorker.WorkerMoving
  nameWithType: MaintenanceWorker.WorkerMoving
- uid: Model.Map
  name: Map
  href: api/Model.Map.html
  commentId: T:Model.Map
  fullName: Model.Map
  nameWithType: Map
- uid: Model.Map.ChooseBuilding(System.Collections.ObjectModel.ObservableCollection{Model.Building})
  name: ChooseBuilding(ObservableCollection<Building>)
  href: api/Model.Map.html#Model_Map_ChooseBuilding_System_Collections_ObjectModel_ObservableCollection_Model_Building__
  commentId: M:Model.Map.ChooseBuilding(System.Collections.ObjectModel.ObservableCollection{Model.Building})
  name.vb: ChooseBuilding(ObservableCollection(Of Building))
  fullName: Model.Map.ChooseBuilding(System.Collections.ObjectModel.ObservableCollection<Model.Building>)
  fullName.vb: Model.Map.ChooseBuilding(System.Collections.ObjectModel.ObservableCollection(Of Model.Building))
  nameWithType: Map.ChooseBuilding(ObservableCollection<Building>)
  nameWithType.vb: Map.ChooseBuilding(ObservableCollection(Of Building))
- uid: Model.Map.ChooseBuilding*
  name: ChooseBuilding
  href: api/Model.Map.html#Model_Map_ChooseBuilding_
  commentId: Overload:Model.Map.ChooseBuilding
  isSpec: "True"
  fullName: Model.Map.ChooseBuilding
  nameWithType: Map.ChooseBuilding
- uid: Model.Map.Distance
  name: Distance
  href: api/Model.Map.html#Model_Map_Distance
  commentId: P:Model.Map.Distance
  fullName: Model.Map.Distance
  nameWithType: Map.Distance
- uid: Model.Map.Distance*
  name: Distance
  href: api/Model.Map.html#Model_Map_Distance_
  commentId: Overload:Model.Map.Distance
  isSpec: "True"
  fullName: Model.Map.Distance
  nameWithType: Map.Distance
- uid: Model.Map.Facilities
  name: Facilities
  href: api/Model.Map.html#Model_Map_Facilities
  commentId: P:Model.Map.Facilities
  fullName: Model.Map.Facilities
  nameWithType: Map.Facilities
- uid: Model.Map.Facilities*
  name: Facilities
  href: api/Model.Map.html#Model_Map_Facilities_
  commentId: Overload:Model.Map.Facilities
  isSpec: "True"
  fullName: Model.Map.Facilities
  nameWithType: Map.Facilities
- uid: Model.Map.FloydWarshall(System.Collections.ObjectModel.ObservableCollection{Model.Facility})
  name: FloydWarshall(ObservableCollection<Facility>)
  href: api/Model.Map.html#Model_Map_FloydWarshall_System_Collections_ObjectModel_ObservableCollection_Model_Facility__
  commentId: M:Model.Map.FloydWarshall(System.Collections.ObjectModel.ObservableCollection{Model.Facility})
  name.vb: FloydWarshall(ObservableCollection(Of Facility))
  fullName: Model.Map.FloydWarshall(System.Collections.ObjectModel.ObservableCollection<Model.Facility>)
  fullName.vb: Model.Map.FloydWarshall(System.Collections.ObjectModel.ObservableCollection(Of Model.Facility))
  nameWithType: Map.FloydWarshall(ObservableCollection<Facility>)
  nameWithType.vb: Map.FloydWarshall(ObservableCollection(Of Facility))
- uid: Model.Map.FloydWarshall*
  name: FloydWarshall
  href: api/Model.Map.html#Model_Map_FloydWarshall_
  commentId: Overload:Model.Map.FloydWarshall
  isSpec: "True"
  fullName: Model.Map.FloydWarshall
  nameWithType: Map.FloydWarshall
- uid: Model.Map.FloydWarshallDone
  name: FloydWarshallDone
  href: api/Model.Map.html#Model_Map_FloydWarshallDone
  commentId: E:Model.Map.FloydWarshallDone
  fullName: Model.Map.FloydWarshallDone
  nameWithType: Map.FloydWarshallDone
- uid: Model.Map.Flush
  name: Flush()
  href: api/Model.Map.html#Model_Map_Flush
  commentId: M:Model.Map.Flush
  fullName: Model.Map.Flush()
  nameWithType: Map.Flush()
- uid: Model.Map.Flush*
  name: Flush
  href: api/Model.Map.html#Model_Map_Flush_
  commentId: Overload:Model.Map.Flush
  isSpec: "True"
  fullName: Model.Map.Flush
  nameWithType: Map.Flush
- uid: Model.Map.GetBuildingsWithRoadToThis(Model.Facility)
  name: GetBuildingsWithRoadToThis(Facility)
  href: api/Model.Map.html#Model_Map_GetBuildingsWithRoadToThis_Model_Facility_
  commentId: M:Model.Map.GetBuildingsWithRoadToThis(Model.Facility)
  fullName: Model.Map.GetBuildingsWithRoadToThis(Model.Facility)
  nameWithType: Map.GetBuildingsWithRoadToThis(Facility)
- uid: Model.Map.GetBuildingsWithRoadToThis*
  name: GetBuildingsWithRoadToThis
  href: api/Model.Map.html#Model_Map_GetBuildingsWithRoadToThis_
  commentId: Overload:Model.Map.GetBuildingsWithRoadToThis
  isSpec: "True"
  fullName: Model.Map.GetBuildingsWithRoadToThis
  nameWithType: Map.GetBuildingsWithRoadToThis
- uid: Model.Map.GetCheapestDestination(System.Collections.ObjectModel.ObservableCollection{Model.Building})
  name: GetCheapestDestination(ObservableCollection<Building>)
  href: api/Model.Map.html#Model_Map_GetCheapestDestination_System_Collections_ObjectModel_ObservableCollection_Model_Building__
  commentId: M:Model.Map.GetCheapestDestination(System.Collections.ObjectModel.ObservableCollection{Model.Building})
  name.vb: GetCheapestDestination(ObservableCollection(Of Building))
  fullName: Model.Map.GetCheapestDestination(System.Collections.ObjectModel.ObservableCollection<Model.Building>)
  fullName.vb: Model.Map.GetCheapestDestination(System.Collections.ObjectModel.ObservableCollection(Of Model.Building))
  nameWithType: Map.GetCheapestDestination(ObservableCollection<Building>)
  nameWithType.vb: Map.GetCheapestDestination(ObservableCollection(Of Building))
- uid: Model.Map.GetCheapestDestination*
  name: GetCheapestDestination
  href: api/Model.Map.html#Model_Map_GetCheapestDestination_
  commentId: Overload:Model.Map.GetCheapestDestination
  isSpec: "True"
  fullName: Model.Map.GetCheapestDestination
  nameWithType: Map.GetCheapestDestination
- uid: Model.Map.GetClosestBuilding(Model.Building)
  name: GetClosestBuilding(Building)
  href: api/Model.Map.html#Model_Map_GetClosestBuilding_Model_Building_
  commentId: M:Model.Map.GetClosestBuilding(Model.Building)
  fullName: Model.Map.GetClosestBuilding(Model.Building)
  nameWithType: Map.GetClosestBuilding(Building)
- uid: Model.Map.GetClosestBuilding*
  name: GetClosestBuilding
  href: api/Model.Map.html#Model_Map_GetClosestBuilding_
  commentId: Overload:Model.Map.GetClosestBuilding
  isSpec: "True"
  fullName: Model.Map.GetClosestBuilding
  nameWithType: Map.GetClosestBuilding
- uid: Model.Map.GetClosestMaintenanceWorker(Model.Building,System.Collections.Generic.List{Model.MaintenanceWorker})
  name: GetClosestMaintenanceWorker(Building, List<MaintenanceWorker>)
  href: api/Model.Map.html#Model_Map_GetClosestMaintenanceWorker_Model_Building_System_Collections_Generic_List_Model_MaintenanceWorker__
  commentId: M:Model.Map.GetClosestMaintenanceWorker(Model.Building,System.Collections.Generic.List{Model.MaintenanceWorker})
  name.vb: GetClosestMaintenanceWorker(Building, List(Of MaintenanceWorker))
  fullName: Model.Map.GetClosestMaintenanceWorker(Model.Building, System.Collections.Generic.List<Model.MaintenanceWorker>)
  fullName.vb: Model.Map.GetClosestMaintenanceWorker(Model.Building, System.Collections.Generic.List(Of Model.MaintenanceWorker))
  nameWithType: Map.GetClosestMaintenanceWorker(Building, List<MaintenanceWorker>)
  nameWithType.vb: Map.GetClosestMaintenanceWorker(Building, List(Of MaintenanceWorker))
- uid: Model.Map.GetClosestMaintenanceWorker*
  name: GetClosestMaintenanceWorker
  href: api/Model.Map.html#Model_Map_GetClosestMaintenanceWorker_
  commentId: Overload:Model.Map.GetClosestMaintenanceWorker
  isSpec: "True"
  fullName: Model.Map.GetClosestMaintenanceWorker
  nameWithType: Map.GetClosestMaintenanceWorker
- uid: Model.Map.GetFacility(Model.GridPoint)
  name: GetFacility(GridPoint)
  href: api/Model.Map.html#Model_Map_GetFacility_Model_GridPoint_
  commentId: M:Model.Map.GetFacility(Model.GridPoint)
  fullName: Model.Map.GetFacility(Model.GridPoint)
  nameWithType: Map.GetFacility(GridPoint)
- uid: Model.Map.GetFacility*
  name: GetFacility
  href: api/Model.Map.html#Model_Map_GetFacility_
  commentId: Overload:Model.Map.GetFacility
  isSpec: "True"
  fullName: Model.Map.GetFacility
  nameWithType: Map.GetFacility
- uid: Model.Map.GetFoodBuildings(Model.Building)
  name: GetFoodBuildings(Building)
  href: api/Model.Map.html#Model_Map_GetFoodBuildings_Model_Building_
  commentId: M:Model.Map.GetFoodBuildings(Model.Building)
  fullName: Model.Map.GetFoodBuildings(Model.Building)
  nameWithType: Map.GetFoodBuildings(Building)
- uid: Model.Map.GetFoodBuildings*
  name: GetFoodBuildings
  href: api/Model.Map.html#Model_Map_GetFoodBuildings_
  commentId: Overload:Model.Map.GetFoodBuildings
  isSpec: "True"
  fullName: Model.Map.GetFoodBuildings
  nameWithType: Map.GetFoodBuildings
- uid: Model.Map.GetGames(Model.Building)
  name: GetGames(Building)
  href: api/Model.Map.html#Model_Map_GetGames_Model_Building_
  commentId: M:Model.Map.GetGames(Model.Building)
  fullName: Model.Map.GetGames(Model.Building)
  nameWithType: Map.GetGames(Building)
- uid: Model.Map.GetGames*
  name: GetGames
  href: api/Model.Map.html#Model_Map_GetGames_
  commentId: Overload:Model.Map.GetGames
  isSpec: "True"
  fullName: Model.Map.GetGames
  nameWithType: Map.GetGames
- uid: Model.Map.GetHappiness(Model.Facility)
  name: GetHappiness(Facility)
  href: api/Model.Map.html#Model_Map_GetHappiness_Model_Facility_
  commentId: M:Model.Map.GetHappiness(Model.Facility)
  fullName: Model.Map.GetHappiness(Model.Facility)
  nameWithType: Map.GetHappiness(Facility)
- uid: Model.Map.GetHappiness*
  name: GetHappiness
  href: api/Model.Map.html#Model_Map_GetHappiness_
  commentId: Overload:Model.Map.GetHappiness
  isSpec: "True"
  fullName: Model.Map.GetHappiness
  nameWithType: Map.GetHappiness
- uid: Model.Map.GetPath(Model.Facility,Model.Facility)
  name: GetPath(Facility, Facility)
  href: api/Model.Map.html#Model_Map_GetPath_Model_Facility_Model_Facility_
  commentId: M:Model.Map.GetPath(Model.Facility,Model.Facility)
  fullName: Model.Map.GetPath(Model.Facility, Model.Facility)
  nameWithType: Map.GetPath(Facility, Facility)
- uid: Model.Map.GetPath*
  name: GetPath
  href: api/Model.Map.html#Model_Map_GetPath_
  commentId: Overload:Model.Map.GetPath
  isSpec: "True"
  fullName: Model.Map.GetPath
  nameWithType: Map.GetPath
- uid: Model.Map.GetRandomRoad(Model.Facility)
  name: GetRandomRoad(Facility)
  href: api/Model.Map.html#Model_Map_GetRandomRoad_Model_Facility_
  commentId: M:Model.Map.GetRandomRoad(Model.Facility)
  fullName: Model.Map.GetRandomRoad(Model.Facility)
  nameWithType: Map.GetRandomRoad(Facility)
- uid: Model.Map.GetRandomRoad*
  name: GetRandomRoad
  href: api/Model.Map.html#Model_Map_GetRandomRoad_
  commentId: Overload:Model.Map.GetRandomRoad
  isSpec: "True"
  fullName: Model.Map.GetRandomRoad
  nameWithType: Map.GetRandomRoad
- uid: Model.Map.Instance
  name: Instance
  href: api/Model.Map.html#Model_Map_Instance
  commentId: P:Model.Map.Instance
  fullName: Model.Map.Instance
  nameWithType: Map.Instance
- uid: Model.Map.Instance*
  name: Instance
  href: api/Model.Map.html#Model_Map_Instance_
  commentId: Overload:Model.Map.Instance
  isSpec: "True"
  fullName: Model.Map.Instance
  nameWithType: Map.Instance
- uid: Model.Map.Pi
  name: Pi
  href: api/Model.Map.html#Model_Map_Pi
  commentId: P:Model.Map.Pi
  fullName: Model.Map.Pi
  nameWithType: Map.Pi
- uid: Model.Map.Pi*
  name: Pi
  href: api/Model.Map.html#Model_Map_Pi_
  commentId: Overload:Model.Map.Pi
  isSpec: "True"
  fullName: Model.Map.Pi
  nameWithType: Map.Pi
- uid: Model.MiniTrain
  name: MiniTrain
  href: api/Model.MiniTrain.html
  commentId: T:Model.MiniTrain
  fullName: Model.MiniTrain
  nameWithType: MiniTrain
- uid: Model.MiniTrain.#ctor
  name: MiniTrain()
  href: api/Model.MiniTrain.html#Model_MiniTrain__ctor
  commentId: M:Model.MiniTrain.#ctor
  fullName: Model.MiniTrain.MiniTrain()
  nameWithType: MiniTrain.MiniTrain()
- uid: Model.MiniTrain.#ctor(Model.GridPoint)
  name: MiniTrain(GridPoint)
  href: api/Model.MiniTrain.html#Model_MiniTrain__ctor_Model_GridPoint_
  commentId: M:Model.MiniTrain.#ctor(Model.GridPoint)
  fullName: Model.MiniTrain.MiniTrain(Model.GridPoint)
  nameWithType: MiniTrain.MiniTrain(GridPoint)
- uid: Model.MiniTrain.#ctor*
  name: MiniTrain
  href: api/Model.MiniTrain.html#Model_MiniTrain__ctor_
  commentId: Overload:Model.MiniTrain.#ctor
  isSpec: "True"
  fullName: Model.MiniTrain.MiniTrain
  nameWithType: MiniTrain.MiniTrain
- uid: Model.Park
  name: Park
  href: api/Model.Park.html
  commentId: T:Model.Park
  fullName: Model.Park
  nameWithType: Park
- uid: Model.Park.#ctor
  name: Park()
  href: api/Model.Park.html#Model_Park__ctor
  commentId: M:Model.Park.#ctor
  fullName: Model.Park.Park()
  nameWithType: Park.Park()
- uid: Model.Park.#ctor(System.String,System.Int32,Model.ParkStatus)
  name: Park(String, Int32, ParkStatus)
  href: api/Model.Park.html#Model_Park__ctor_System_String_System_Int32_Model_ParkStatus_
  commentId: M:Model.Park.#ctor(System.String,System.Int32,Model.ParkStatus)
  fullName: Model.Park.Park(System.String, System.Int32, Model.ParkStatus)
  nameWithType: Park.Park(String, Int32, ParkStatus)
- uid: Model.Park.#ctor*
  name: Park
  href: api/Model.Park.html#Model_Park__ctor_
  commentId: Overload:Model.Park.#ctor
  isSpec: "True"
  fullName: Model.Park.Park
  nameWithType: Park.Park
- uid: Model.Park.Budget
  name: Budget
  href: api/Model.Park.html#Model_Park_Budget
  commentId: P:Model.Park.Budget
  fullName: Model.Park.Budget
  nameWithType: Park.Budget
- uid: Model.Park.Budget*
  name: Budget
  href: api/Model.Park.html#Model_Park_Budget_
  commentId: Overload:Model.Park.Budget
  isSpec: "True"
  fullName: Model.Park.Budget
  nameWithType: Park.Budget
- uid: Model.Park.BudgetState
  name: BudgetState
  href: api/Model.Park.html#Model_Park_BudgetState
  commentId: P:Model.Park.BudgetState
  fullName: Model.Park.BudgetState
  nameWithType: Park.BudgetState
- uid: Model.Park.BudgetState*
  name: BudgetState
  href: api/Model.Park.html#Model_Park_BudgetState_
  commentId: Overload:Model.Park.BudgetState
  isSpec: "True"
  fullName: Model.Park.BudgetState
  nameWithType: Park.BudgetState
- uid: Model.Park.CanPurchasableBePlaced(Model.Purchasable,Model.GridPoint)
  name: CanPurchasableBePlaced(Purchasable, GridPoint)
  href: api/Model.Park.html#Model_Park_CanPurchasableBePlaced_Model_Purchasable_Model_GridPoint_
  commentId: M:Model.Park.CanPurchasableBePlaced(Model.Purchasable,Model.GridPoint)
  fullName: Model.Park.CanPurchasableBePlaced(Model.Purchasable, Model.GridPoint)
  nameWithType: Park.CanPurchasableBePlaced(Purchasable, GridPoint)
- uid: Model.Park.CanPurchasableBePlaced*
  name: CanPurchasableBePlaced
  href: api/Model.Park.html#Model_Park_CanPurchasableBePlaced_
  commentId: Overload:Model.Park.CanPurchasableBePlaced
  isSpec: "True"
  fullName: Model.Park.CanPurchasableBePlaced
  nameWithType: Park.CanPurchasableBePlaced
- uid: Model.Park.Facilities
  name: Facilities
  href: api/Model.Park.html#Model_Park_Facilities
  commentId: P:Model.Park.Facilities
  fullName: Model.Park.Facilities
  nameWithType: Park.Facilities
- uid: Model.Park.Facilities*
  name: Facilities
  href: api/Model.Park.html#Model_Park_Facilities_
  commentId: Overload:Model.Park.Facilities
  isSpec: "True"
  fullName: Model.Park.Facilities
  nameWithType: Park.Facilities
- uid: Model.Park.GameOver
  name: GameOver
  href: api/Model.Park.html#Model_Park_GameOver
  commentId: E:Model.Park.GameOver
  fullName: Model.Park.GameOver
  nameWithType: Park.GameOver
- uid: Model.Park.MaintenanceWorkers
  name: MaintenanceWorkers
  href: api/Model.Park.html#Model_Park_MaintenanceWorkers
  commentId: P:Model.Park.MaintenanceWorkers
  fullName: Model.Park.MaintenanceWorkers
  nameWithType: Park.MaintenanceWorkers
- uid: Model.Park.MaintenanceWorkers*
  name: MaintenanceWorkers
  href: api/Model.Park.html#Model_Park_MaintenanceWorkers_
  commentId: Overload:Model.Park.MaintenanceWorkers
  isSpec: "True"
  fullName: Model.Park.MaintenanceWorkers
  nameWithType: Park.MaintenanceWorkers
- uid: Model.Park.NameState
  name: NameState
  href: api/Model.Park.html#Model_Park_NameState
  commentId: P:Model.Park.NameState
  fullName: Model.Park.NameState
  nameWithType: Park.NameState
- uid: Model.Park.NameState*
  name: NameState
  href: api/Model.Park.html#Model_Park_NameState_
  commentId: Overload:Model.Park.NameState
  isSpec: "True"
  fullName: Model.Park.NameState
  nameWithType: Park.NameState
- uid: Model.Park.OpenOrClose
  name: OpenOrClose()
  href: api/Model.Park.html#Model_Park_OpenOrClose
  commentId: M:Model.Park.OpenOrClose
  fullName: Model.Park.OpenOrClose()
  nameWithType: Park.OpenOrClose()
- uid: Model.Park.OpenOrClose*
  name: OpenOrClose
  href: api/Model.Park.html#Model_Park_OpenOrClose_
  commentId: Overload:Model.Park.OpenOrClose
  isSpec: "True"
  fullName: Model.Park.OpenOrClose
  nameWithType: Park.OpenOrClose
- uid: Model.Park.ParkStatus
  name: ParkStatus
  href: api/Model.Park.html#Model_Park_ParkStatus
  commentId: P:Model.Park.ParkStatus
  fullName: Model.Park.ParkStatus
  nameWithType: Park.ParkStatus
- uid: Model.Park.ParkStatus*
  name: ParkStatus
  href: api/Model.Park.html#Model_Park_ParkStatus_
  commentId: Overload:Model.Park.ParkStatus
  isSpec: "True"
  fullName: Model.Park.ParkStatus
  nameWithType: Park.ParkStatus
- uid: Model.Park.ParkStatusState
  name: ParkStatusState
  href: api/Model.Park.html#Model_Park_ParkStatusState
  commentId: P:Model.Park.ParkStatusState
  fullName: Model.Park.ParkStatusState
  nameWithType: Park.ParkStatusState
- uid: Model.Park.ParkStatusState*
  name: ParkStatusState
  href: api/Model.Park.html#Model_Park_ParkStatusState_
  commentId: Overload:Model.Park.ParkStatusState
  isSpec: "True"
  fullName: Model.Park.ParkStatusState
  nameWithType: Park.ParkStatusState
- uid: Model.Park.PurchasableCatalog
  name: PurchasableCatalog
  href: api/Model.Park.html#Model_Park_PurchasableCatalog
  commentId: P:Model.Park.PurchasableCatalog
  fullName: Model.Park.PurchasableCatalog
  nameWithType: Park.PurchasableCatalog
- uid: Model.Park.PurchasableCatalog*
  name: PurchasableCatalog
  href: api/Model.Park.html#Model_Park_PurchasableCatalog_
  commentId: Overload:Model.Park.PurchasableCatalog
  isSpec: "True"
  fullName: Model.Park.PurchasableCatalog
  nameWithType: Park.PurchasableCatalog
- uid: Model.Park.RemovePurchasable(Model.Purchasable)
  name: RemovePurchasable(Purchasable)
  href: api/Model.Park.html#Model_Park_RemovePurchasable_Model_Purchasable_
  commentId: M:Model.Park.RemovePurchasable(Model.Purchasable)
  fullName: Model.Park.RemovePurchasable(Model.Purchasable)
  nameWithType: Park.RemovePurchasable(Purchasable)
- uid: Model.Park.RemovePurchasable*
  name: RemovePurchasable
  href: api/Model.Park.html#Model_Park_RemovePurchasable_
  commentId: Overload:Model.Park.RemovePurchasable
  isSpec: "True"
  fullName: Model.Park.RemovePurchasable
  nameWithType: Park.RemovePurchasable
- uid: Model.Park.Size
  name: Size
  href: api/Model.Park.html#Model_Park_Size
  commentId: P:Model.Park.Size
  fullName: Model.Park.Size
  nameWithType: Park.Size
- uid: Model.Park.Size*
  name: Size
  href: api/Model.Park.html#Model_Park_Size_
  commentId: Overload:Model.Park.Size
  isSpec: "True"
  fullName: Model.Park.Size
  nameWithType: Park.Size
- uid: Model.Park.SizeState
  name: SizeState
  href: api/Model.Park.html#Model_Park_SizeState
  commentId: P:Model.Park.SizeState
  fullName: Model.Park.SizeState
  nameWithType: Park.SizeState
- uid: Model.Park.SizeState*
  name: SizeState
  href: api/Model.Park.html#Model_Park_SizeState_
  commentId: Overload:Model.Park.SizeState
  isSpec: "True"
  fullName: Model.Park.SizeState
  nameWithType: Park.SizeState
- uid: Model.Park.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.Park.html#Model_Park_TimeAdvanced
  commentId: M:Model.Park.TimeAdvanced
  fullName: Model.Park.TimeAdvanced()
  nameWithType: Park.TimeAdvanced()
- uid: Model.Park.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.Park.html#Model_Park_TimeAdvanced_
  commentId: Overload:Model.Park.TimeAdvanced
  isSpec: "True"
  fullName: Model.Park.TimeAdvanced
  nameWithType: Park.TimeAdvanced
- uid: Model.Park.TimeMode
  name: TimeMode
  href: api/Model.Park.html#Model_Park_TimeMode
  commentId: P:Model.Park.TimeMode
  fullName: Model.Park.TimeMode
  nameWithType: Park.TimeMode
- uid: Model.Park.TimeMode*
  name: TimeMode
  href: api/Model.Park.html#Model_Park_TimeMode_
  commentId: Overload:Model.Park.TimeMode
  isSpec: "True"
  fullName: Model.Park.TimeMode
  nameWithType: Park.TimeMode
- uid: Model.Park.TimeModeState
  name: TimeModeState
  href: api/Model.Park.html#Model_Park_TimeModeState
  commentId: P:Model.Park.TimeModeState
  fullName: Model.Park.TimeModeState
  nameWithType: Park.TimeModeState
- uid: Model.Park.TimeModeState*
  name: TimeModeState
  href: api/Model.Park.html#Model_Park_TimeModeState_
  commentId: Overload:Model.Park.TimeModeState
  isSpec: "True"
  fullName: Model.Park.TimeModeState
  nameWithType: Park.TimeModeState
- uid: Model.Park.TimeState
  name: TimeState
  href: api/Model.Park.html#Model_Park_TimeState
  commentId: P:Model.Park.TimeState
  fullName: Model.Park.TimeState
  nameWithType: Park.TimeState
- uid: Model.Park.TimeState*
  name: TimeState
  href: api/Model.Park.html#Model_Park_TimeState_
  commentId: Overload:Model.Park.TimeState
  isSpec: "True"
  fullName: Model.Park.TimeState
  nameWithType: Park.TimeState
- uid: Model.Park.TryPlacingPurchasable(Model.Purchasable)
  name: TryPlacingPurchasable(Purchasable)
  href: api/Model.Park.html#Model_Park_TryPlacingPurchasable_Model_Purchasable_
  commentId: M:Model.Park.TryPlacingPurchasable(Model.Purchasable)
  fullName: Model.Park.TryPlacingPurchasable(Model.Purchasable)
  nameWithType: Park.TryPlacingPurchasable(Purchasable)
- uid: Model.Park.TryPlacingPurchasable*
  name: TryPlacingPurchasable
  href: api/Model.Park.html#Model_Park_TryPlacingPurchasable_
  commentId: Overload:Model.Park.TryPlacingPurchasable
  isSpec: "True"
  fullName: Model.Park.TryPlacingPurchasable
  nameWithType: Park.TryPlacingPurchasable
- uid: Model.Park.Visitors
  name: Visitors
  href: api/Model.Park.html#Model_Park_Visitors
  commentId: P:Model.Park.Visitors
  fullName: Model.Park.Visitors
  nameWithType: Park.Visitors
- uid: Model.Park.Visitors*
  name: Visitors
  href: api/Model.Park.html#Model_Park_Visitors_
  commentId: Overload:Model.Park.Visitors
  isSpec: "True"
  fullName: Model.Park.Visitors
  nameWithType: Park.Visitors
- uid: Model.ParkStatus
  name: ParkStatus
  href: api/Model.ParkStatus.html
  commentId: T:Model.ParkStatus
  fullName: Model.ParkStatus
  nameWithType: ParkStatus
- uid: Model.ParkStatus.Closed
  name: Closed
  href: api/Model.ParkStatus.html#Model_ParkStatus_Closed
  commentId: F:Model.ParkStatus.Closed
  fullName: Model.ParkStatus.Closed
  nameWithType: ParkStatus.Closed
- uid: Model.ParkStatus.Open
  name: Open
  href: api/Model.ParkStatus.html#Model_ParkStatus_Open
  commentId: F:Model.ParkStatus.Open
  fullName: Model.ParkStatus.Open
  nameWithType: ParkStatus.Open
- uid: Model.PlacementResult
  name: PlacementResult
  href: api/Model.PlacementResult.html
  commentId: T:Model.PlacementResult
  fullName: Model.PlacementResult
  nameWithType: PlacementResult
- uid: Model.PlacementResult.Conflict
  name: Conflict
  href: api/Model.PlacementResult.html#Model_PlacementResult_Conflict
  commentId: F:Model.PlacementResult.Conflict
  fullName: Model.PlacementResult.Conflict
  nameWithType: PlacementResult.Conflict
- uid: Model.PlacementResult.OutOfField
  name: OutOfField
  href: api/Model.PlacementResult.html#Model_PlacementResult_OutOfField
  commentId: F:Model.PlacementResult.OutOfField
  fullName: Model.PlacementResult.OutOfField
  nameWithType: PlacementResult.OutOfField
- uid: Model.PlacementResult.Valid
  name: Valid
  href: api/Model.PlacementResult.html#Model_PlacementResult_Valid
  commentId: F:Model.PlacementResult.Valid
  fullName: Model.PlacementResult.Valid
  nameWithType: PlacementResult.Valid
- uid: Model.PlacingException
  name: PlacingException
  href: api/Model.PlacingException.html
  commentId: T:Model.PlacingException
  fullName: Model.PlacingException
  nameWithType: PlacingException
- uid: Model.PlacingException.#ctor(Model.PlacementResult,System.String)
  name: PlacingException(PlacementResult, String)
  href: api/Model.PlacingException.html#Model_PlacingException__ctor_Model_PlacementResult_System_String_
  commentId: M:Model.PlacingException.#ctor(Model.PlacementResult,System.String)
  fullName: Model.PlacingException.PlacingException(Model.PlacementResult, System.String)
  nameWithType: PlacingException.PlacingException(PlacementResult, String)
- uid: Model.PlacingException.#ctor*
  name: PlacingException
  href: api/Model.PlacingException.html#Model_PlacingException__ctor_
  commentId: Overload:Model.PlacingException.#ctor
  isSpec: "True"
  fullName: Model.PlacingException.PlacingException
  nameWithType: PlacingException.PlacingException
- uid: Model.Plant
  name: Plant
  href: api/Model.Plant.html
  commentId: T:Model.Plant
  fullName: Model.Plant
  nameWithType: Plant
- uid: Model.Plant.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32)
  name: Plant(String, GridPoint, Int32, Int32)
  href: api/Model.Plant.html#Model_Plant__ctor_System_String_Model_GridPoint_System_Int32_System_Int32_
  commentId: M:Model.Plant.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32)
  fullName: Model.Plant.Plant(System.String, Model.GridPoint, System.Int32, System.Int32)
  nameWithType: Plant.Plant(String, GridPoint, Int32, Int32)
- uid: Model.Plant.#ctor*
  name: Plant
  href: api/Model.Plant.html#Model_Plant__ctor_
  commentId: Overload:Model.Plant.#ctor
  isSpec: "True"
  fullName: Model.Plant.Plant
  nameWithType: Plant.Plant
- uid: Model.Plant.HappinessFactor
  name: HappinessFactor
  href: api/Model.Plant.html#Model_Plant_HappinessFactor
  commentId: P:Model.Plant.HappinessFactor
  fullName: Model.Plant.HappinessFactor
  nameWithType: Plant.HappinessFactor
- uid: Model.Plant.HappinessFactor*
  name: HappinessFactor
  href: api/Model.Plant.html#Model_Plant_HappinessFactor_
  commentId: Overload:Model.Plant.HappinessFactor
  isSpec: "True"
  fullName: Model.Plant.HappinessFactor
  nameWithType: Plant.HappinessFactor
- uid: Model.Plant.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.Plant.html#Model_Plant_TimeAdvanced
  commentId: M:Model.Plant.TimeAdvanced
  fullName: Model.Plant.TimeAdvanced()
  nameWithType: Plant.TimeAdvanced()
- uid: Model.Plant.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.Plant.html#Model_Plant_TimeAdvanced_
  commentId: Overload:Model.Plant.TimeAdvanced
  isSpec: "True"
  fullName: Model.Plant.TimeAdvanced
  nameWithType: Plant.TimeAdvanced
- uid: Model.PopCornStand
  name: PopCornStand
  href: api/Model.PopCornStand.html
  commentId: T:Model.PopCornStand
  fullName: Model.PopCornStand
  nameWithType: PopCornStand
- uid: Model.PopCornStand.#ctor
  name: PopCornStand()
  href: api/Model.PopCornStand.html#Model_PopCornStand__ctor
  commentId: M:Model.PopCornStand.#ctor
  fullName: Model.PopCornStand.PopCornStand()
  nameWithType: PopCornStand.PopCornStand()
- uid: Model.PopCornStand.#ctor(Model.GridPoint)
  name: PopCornStand(GridPoint)
  href: api/Model.PopCornStand.html#Model_PopCornStand__ctor_Model_GridPoint_
  commentId: M:Model.PopCornStand.#ctor(Model.GridPoint)
  fullName: Model.PopCornStand.PopCornStand(Model.GridPoint)
  nameWithType: PopCornStand.PopCornStand(GridPoint)
- uid: Model.PopCornStand.#ctor*
  name: PopCornStand
  href: api/Model.PopCornStand.html#Model_PopCornStand__ctor_
  commentId: Overload:Model.PopCornStand.#ctor
  isSpec: "True"
  fullName: Model.PopCornStand.PopCornStand
  nameWithType: PopCornStand.PopCornStand
- uid: Model.Purchasable
  name: Purchasable
  href: api/Model.Purchasable.html
  commentId: T:Model.Purchasable
  fullName: Model.Purchasable
  nameWithType: Purchasable
- uid: Model.Purchasable.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32)
  name: Purchasable(String, GridPoint, Int32, Int32, Int32)
  href: api/Model.Purchasable.html#Model_Purchasable__ctor_System_String_Model_GridPoint_System_Int32_System_Int32_System_Int32_
  commentId: M:Model.Purchasable.#ctor(System.String,Model.GridPoint,System.Int32,System.Int32,System.Int32)
  fullName: Model.Purchasable.Purchasable(System.String, Model.GridPoint, System.Int32, System.Int32, System.Int32)
  nameWithType: Purchasable.Purchasable(String, GridPoint, Int32, Int32, Int32)
- uid: Model.Purchasable.#ctor*
  name: Purchasable
  href: api/Model.Purchasable.html#Model_Purchasable__ctor_
  commentId: Overload:Model.Purchasable.#ctor
  isSpec: "True"
  fullName: Model.Purchasable.Purchasable
  nameWithType: Purchasable.Purchasable
- uid: Model.Purchasable.Name
  name: Name
  href: api/Model.Purchasable.html#Model_Purchasable_Name
  commentId: P:Model.Purchasable.Name
  fullName: Model.Purchasable.Name
  nameWithType: Purchasable.Name
- uid: Model.Purchasable.Name*
  name: Name
  href: api/Model.Purchasable.html#Model_Purchasable_Name_
  commentId: Overload:Model.Purchasable.Name
  isSpec: "True"
  fullName: Model.Purchasable.Name
  nameWithType: Purchasable.Name
- uid: Model.Purchasable.Price
  name: Price
  href: api/Model.Purchasable.html#Model_Purchasable_Price
  commentId: P:Model.Purchasable.Price
  fullName: Model.Purchasable.Price
  nameWithType: Purchasable.Price
- uid: Model.Purchasable.Price*
  name: Price
  href: api/Model.Purchasable.html#Model_Purchasable_Price_
  commentId: Overload:Model.Purchasable.Price
  isSpec: "True"
  fullName: Model.Purchasable.Price
  nameWithType: Purchasable.Price
- uid: Model.Restaurant
  name: Restaurant
  href: api/Model.Restaurant.html
  commentId: T:Model.Restaurant
  fullName: Model.Restaurant
  nameWithType: Restaurant
- uid: Model.Restaurant.#ctor
  name: Restaurant()
  href: api/Model.Restaurant.html#Model_Restaurant__ctor
  commentId: M:Model.Restaurant.#ctor
  fullName: Model.Restaurant.Restaurant()
  nameWithType: Restaurant.Restaurant()
- uid: Model.Restaurant.#ctor(Model.GridPoint)
  name: Restaurant(GridPoint)
  href: api/Model.Restaurant.html#Model_Restaurant__ctor_Model_GridPoint_
  commentId: M:Model.Restaurant.#ctor(Model.GridPoint)
  fullName: Model.Restaurant.Restaurant(Model.GridPoint)
  nameWithType: Restaurant.Restaurant(GridPoint)
- uid: Model.Restaurant.#ctor*
  name: Restaurant
  href: api/Model.Restaurant.html#Model_Restaurant__ctor_
  commentId: Overload:Model.Restaurant.#ctor
  isSpec: "True"
  fullName: Model.Restaurant.Restaurant
  nameWithType: Restaurant.Restaurant
- uid: Model.Road
  name: Road
  href: api/Model.Road.html
  commentId: T:Model.Road
  fullName: Model.Road
  nameWithType: Road
- uid: Model.Road.#ctor
  name: Road()
  href: api/Model.Road.html#Model_Road__ctor
  commentId: M:Model.Road.#ctor
  fullName: Model.Road.Road()
  nameWithType: Road.Road()
- uid: Model.Road.#ctor(Model.GridPoint)
  name: Road(GridPoint)
  href: api/Model.Road.html#Model_Road__ctor_Model_GridPoint_
  commentId: M:Model.Road.#ctor(Model.GridPoint)
  fullName: Model.Road.Road(Model.GridPoint)
  nameWithType: Road.Road(GridPoint)
- uid: Model.Road.#ctor*
  name: Road
  href: api/Model.Road.html#Model_Road__ctor_
  commentId: Overload:Model.Road.#ctor
  isSpec: "True"
  fullName: Model.Road.Road
  nameWithType: Road.Road
- uid: Model.Road.LocationOnMap
  name: LocationOnMap
  href: api/Model.Road.html#Model_Road_LocationOnMap
  commentId: P:Model.Road.LocationOnMap
  fullName: Model.Road.LocationOnMap
  nameWithType: Road.LocationOnMap
- uid: Model.Road.LocationOnMap*
  name: LocationOnMap
  href: api/Model.Road.html#Model_Road_LocationOnMap_
  commentId: Overload:Model.Road.LocationOnMap
  isSpec: "True"
  fullName: Model.Road.LocationOnMap
  nameWithType: Road.LocationOnMap
- uid: Model.Road.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.Road.html#Model_Road_TimeAdvanced
  commentId: M:Model.Road.TimeAdvanced
  fullName: Model.Road.TimeAdvanced()
  nameWithType: Road.TimeAdvanced()
- uid: Model.Road.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.Road.html#Model_Road_TimeAdvanced_
  commentId: Overload:Model.Road.TimeAdvanced
  isSpec: "True"
  fullName: Model.Road.TimeAdvanced
  nameWithType: Road.TimeAdvanced
- uid: Model.RollerCoaster
  name: RollerCoaster
  href: api/Model.RollerCoaster.html
  commentId: T:Model.RollerCoaster
  fullName: Model.RollerCoaster
  nameWithType: RollerCoaster
- uid: Model.RollerCoaster.#ctor
  name: RollerCoaster()
  href: api/Model.RollerCoaster.html#Model_RollerCoaster__ctor
  commentId: M:Model.RollerCoaster.#ctor
  fullName: Model.RollerCoaster.RollerCoaster()
  nameWithType: RollerCoaster.RollerCoaster()
- uid: Model.RollerCoaster.#ctor(Model.GridPoint)
  name: RollerCoaster(GridPoint)
  href: api/Model.RollerCoaster.html#Model_RollerCoaster__ctor_Model_GridPoint_
  commentId: M:Model.RollerCoaster.#ctor(Model.GridPoint)
  fullName: Model.RollerCoaster.RollerCoaster(Model.GridPoint)
  nameWithType: RollerCoaster.RollerCoaster(GridPoint)
- uid: Model.RollerCoaster.#ctor*
  name: RollerCoaster
  href: api/Model.RollerCoaster.html#Model_RollerCoaster__ctor_
  commentId: Overload:Model.RollerCoaster.#ctor
  isSpec: "True"
  fullName: Model.RollerCoaster.RollerCoaster
  nameWithType: RollerCoaster.RollerCoaster
- uid: Model.TimeMode
  name: TimeMode
  href: api/Model.TimeMode.html
  commentId: T:Model.TimeMode
  fullName: Model.TimeMode
  nameWithType: TimeMode
- uid: Model.TimeMode.Fast
  name: Fast
  href: api/Model.TimeMode.html#Model_TimeMode_Fast
  commentId: F:Model.TimeMode.Fast
  fullName: Model.TimeMode.Fast
  nameWithType: TimeMode.Fast
- uid: Model.TimeMode.Normal
  name: Normal
  href: api/Model.TimeMode.html#Model_TimeMode_Normal
  commentId: F:Model.TimeMode.Normal
  fullName: Model.TimeMode.Normal
  nameWithType: TimeMode.Normal
- uid: Model.TimeMode.Slow
  name: Slow
  href: api/Model.TimeMode.html#Model_TimeMode_Slow
  commentId: F:Model.TimeMode.Slow
  fullName: Model.TimeMode.Slow
  nameWithType: TimeMode.Slow
- uid: Model.Tree
  name: Tree
  href: api/Model.Tree.html
  commentId: T:Model.Tree
  fullName: Model.Tree
  nameWithType: Tree
- uid: Model.Tree.#ctor
  name: Tree()
  href: api/Model.Tree.html#Model_Tree__ctor
  commentId: M:Model.Tree.#ctor
  fullName: Model.Tree.Tree()
  nameWithType: Tree.Tree()
- uid: Model.Tree.#ctor(Model.GridPoint)
  name: Tree(GridPoint)
  href: api/Model.Tree.html#Model_Tree__ctor_Model_GridPoint_
  commentId: M:Model.Tree.#ctor(Model.GridPoint)
  fullName: Model.Tree.Tree(Model.GridPoint)
  nameWithType: Tree.Tree(GridPoint)
- uid: Model.Tree.#ctor*
  name: Tree
  href: api/Model.Tree.html#Model_Tree__ctor_
  commentId: Overload:Model.Tree.#ctor
  isSpec: "True"
  fullName: Model.Tree.Tree
  nameWithType: Tree.Tree
- uid: Model.Util
  name: Model.Util
  href: api/Model.Util.html
  commentId: N:Model.Util
  fullName: Model.Util
  nameWithType: Model.Util
- uid: Model.Util.FacilityStatusExtensions
  name: FacilityStatusExtensions
  href: api/Model.Util.FacilityStatusExtensions.html
  commentId: T:Model.Util.FacilityStatusExtensions
  fullName: Model.Util.FacilityStatusExtensions
  nameWithType: FacilityStatusExtensions
- uid: Model.Util.FacilityStatusExtensions.IsUsable(Model.FacilityStatus)
  name: IsUsable(FacilityStatus)
  href: api/Model.Util.FacilityStatusExtensions.html#Model_Util_FacilityStatusExtensions_IsUsable_Model_FacilityStatus_
  commentId: M:Model.Util.FacilityStatusExtensions.IsUsable(Model.FacilityStatus)
  fullName: Model.Util.FacilityStatusExtensions.IsUsable(Model.FacilityStatus)
  nameWithType: FacilityStatusExtensions.IsUsable(FacilityStatus)
- uid: Model.Util.FacilityStatusExtensions.IsUsable*
  name: IsUsable
  href: api/Model.Util.FacilityStatusExtensions.html#Model_Util_FacilityStatusExtensions_IsUsable_
  commentId: Overload:Model.Util.FacilityStatusExtensions.IsUsable
  isSpec: "True"
  fullName: Model.Util.FacilityStatusExtensions.IsUsable
  nameWithType: FacilityStatusExtensions.IsUsable
- uid: Model.Util.IntervalDatas
  name: IntervalDatas
  href: api/Model.Util.IntervalDatas.html
  commentId: T:Model.Util.IntervalDatas
  fullName: Model.Util.IntervalDatas
  nameWithType: IntervalDatas
- uid: Model.Util.IntervalDatas.#ctor(System.Int32,System.Int32,Model.Building)
  name: IntervalDatas(Int32, Int32, Building)
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas__ctor_System_Int32_System_Int32_Model_Building_
  commentId: M:Model.Util.IntervalDatas.#ctor(System.Int32,System.Int32,Model.Building)
  fullName: Model.Util.IntervalDatas.IntervalDatas(System.Int32, System.Int32, Model.Building)
  nameWithType: IntervalDatas.IntervalDatas(Int32, Int32, Building)
- uid: Model.Util.IntervalDatas.#ctor*
  name: IntervalDatas
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas__ctor_
  commentId: Overload:Model.Util.IntervalDatas.#ctor
  isSpec: "True"
  fullName: Model.Util.IntervalDatas.IntervalDatas
  nameWithType: IntervalDatas.IntervalDatas
- uid: Model.Util.IntervalDatas.Building
  name: Building
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas_Building
  commentId: P:Model.Util.IntervalDatas.Building
  fullName: Model.Util.IntervalDatas.Building
  nameWithType: IntervalDatas.Building
- uid: Model.Util.IntervalDatas.Building*
  name: Building
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas_Building_
  commentId: Overload:Model.Util.IntervalDatas.Building
  isSpec: "True"
  fullName: Model.Util.IntervalDatas.Building
  nameWithType: IntervalDatas.Building
- uid: Model.Util.IntervalDatas.LowerBound
  name: LowerBound
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas_LowerBound
  commentId: P:Model.Util.IntervalDatas.LowerBound
  fullName: Model.Util.IntervalDatas.LowerBound
  nameWithType: IntervalDatas.LowerBound
- uid: Model.Util.IntervalDatas.LowerBound*
  name: LowerBound
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas_LowerBound_
  commentId: Overload:Model.Util.IntervalDatas.LowerBound
  isSpec: "True"
  fullName: Model.Util.IntervalDatas.LowerBound
  nameWithType: IntervalDatas.LowerBound
- uid: Model.Util.IntervalDatas.UpperBound
  name: UpperBound
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas_UpperBound
  commentId: P:Model.Util.IntervalDatas.UpperBound
  fullName: Model.Util.IntervalDatas.UpperBound
  nameWithType: IntervalDatas.UpperBound
- uid: Model.Util.IntervalDatas.UpperBound*
  name: UpperBound
  href: api/Model.Util.IntervalDatas.html#Model_Util_IntervalDatas_UpperBound_
  commentId: Overload:Model.Util.IntervalDatas.UpperBound
  isSpec: "True"
  fullName: Model.Util.IntervalDatas.UpperBound
  nameWithType: IntervalDatas.UpperBound
- uid: Model.Util.ObservableCollectionExtensions
  name: ObservableCollectionExtensions
  href: api/Model.Util.ObservableCollectionExtensions.html
  commentId: T:Model.Util.ObservableCollectionExtensions
  fullName: Model.Util.ObservableCollectionExtensions
  nameWithType: ObservableCollectionExtensions
- uid: Model.Util.ObservableCollectionExtensions.Aggregate*
  name: Aggregate
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Aggregate_
  commentId: Overload:Model.Util.ObservableCollectionExtensions.Aggregate
  isSpec: "True"
  fullName: Model.Util.ObservableCollectionExtensions.Aggregate
  nameWithType: ObservableCollectionExtensions.Aggregate
- uid: Model.Util.ObservableCollectionExtensions.Aggregate``2(System.Collections.ObjectModel.ObservableCollection{Model.Util.State{``0}},``1,System.Func{``0,``1,``1})
  name: Aggregate<T, T2>(ObservableCollection<State<T>>, T2, Func<T, T2, T2>)
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Aggregate__2_System_Collections_ObjectModel_ObservableCollection_Model_Util_State___0_____1_System_Func___0___1___1__
  commentId: M:Model.Util.ObservableCollectionExtensions.Aggregate``2(System.Collections.ObjectModel.ObservableCollection{Model.Util.State{``0}},``1,System.Func{``0,``1,``1})
  name.vb: Aggregate(Of T, T2)(ObservableCollection(Of State(Of T)), T2, Func(Of T, T2, T2))
  fullName: Model.Util.ObservableCollectionExtensions.Aggregate<T, T2>(System.Collections.ObjectModel.ObservableCollection<Model.Util.State<T>>, T2, System.Func<T, T2, T2>)
  fullName.vb: Model.Util.ObservableCollectionExtensions.Aggregate(Of T, T2)(System.Collections.ObjectModel.ObservableCollection(Of Model.Util.State(Of T)), T2, System.Func(Of T, T2, T2))
  nameWithType: ObservableCollectionExtensions.Aggregate<T, T2>(ObservableCollection<State<T>>, T2, Func<T, T2, T2>)
  nameWithType.vb: ObservableCollectionExtensions.Aggregate(Of T, T2)(ObservableCollection(Of State(Of T)), T2, Func(Of T, T2, T2))
- uid: Model.Util.ObservableCollectionExtensions.AsState*
  name: AsState
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_AsState_
  commentId: Overload:Model.Util.ObservableCollectionExtensions.AsState
  isSpec: "True"
  fullName: Model.Util.ObservableCollectionExtensions.AsState
  nameWithType: ObservableCollectionExtensions.AsState
- uid: Model.Util.ObservableCollectionExtensions.AsState``2(System.Collections.ObjectModel.ObservableCollection{``1},System.Func{System.Collections.ObjectModel.ObservableCollection{``1},``0})
  name: AsState<T, T2>(ObservableCollection<T2>, Func<ObservableCollection<T2>, T>)
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_AsState__2_System_Collections_ObjectModel_ObservableCollection___1__System_Func_System_Collections_ObjectModel_ObservableCollection___1____0__
  commentId: M:Model.Util.ObservableCollectionExtensions.AsState``2(System.Collections.ObjectModel.ObservableCollection{``1},System.Func{System.Collections.ObjectModel.ObservableCollection{``1},``0})
  name.vb: AsState(Of T, T2)(ObservableCollection(Of T2), Func(Of ObservableCollection(Of T2), T))
  fullName: Model.Util.ObservableCollectionExtensions.AsState<T, T2>(System.Collections.ObjectModel.ObservableCollection<T2>, System.Func<System.Collections.ObjectModel.ObservableCollection<T2>, T>)
  fullName.vb: Model.Util.ObservableCollectionExtensions.AsState(Of T, T2)(System.Collections.ObjectModel.ObservableCollection(Of T2), System.Func(Of System.Collections.ObjectModel.ObservableCollection(Of T2), T))
  nameWithType: ObservableCollectionExtensions.AsState<T, T2>(ObservableCollection<T2>, Func<ObservableCollection<T2>, T>)
  nameWithType.vb: ObservableCollectionExtensions.AsState(Of T, T2)(ObservableCollection(Of T2), Func(Of ObservableCollection(Of T2), T))
- uid: Model.Util.ObservableCollectionExtensions.Do*
  name: Do
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Do_
  commentId: Overload:Model.Util.ObservableCollectionExtensions.Do
  isSpec: "True"
  fullName: Model.Util.ObservableCollectionExtensions.Do
  nameWithType: ObservableCollectionExtensions.Do
- uid: Model.Util.ObservableCollectionExtensions.Do``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Action{``0})
  name: Do<T>(ObservableCollection<T>, Action<T>)
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Do__1_System_Collections_ObjectModel_ObservableCollection___0__System_Action___0__
  commentId: M:Model.Util.ObservableCollectionExtensions.Do``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Action{``0})
  name.vb: Do(Of T)(ObservableCollection(Of T), Action(Of T))
  fullName: Model.Util.ObservableCollectionExtensions.Do<T>(System.Collections.ObjectModel.ObservableCollection<T>, System.Action<T>)
  fullName.vb: Model.Util.ObservableCollectionExtensions.Do(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), System.Action(Of T))
  nameWithType: ObservableCollectionExtensions.Do<T>(ObservableCollection<T>, Action<T>)
  nameWithType.vb: ObservableCollectionExtensions.Do(Of T)(ObservableCollection(Of T), Action(Of T))
- uid: Model.Util.ObservableCollectionExtensions.Map*
  name: Map
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Map_
  commentId: Overload:Model.Util.ObservableCollectionExtensions.Map
  isSpec: "True"
  fullName: Model.Util.ObservableCollectionExtensions.Map
  nameWithType: ObservableCollectionExtensions.Map
- uid: Model.Util.ObservableCollectionExtensions.Map``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Func{``0,``1})
  name: Map<T, T2>(ObservableCollection<T>, Func<T, T2>)
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Map__2_System_Collections_ObjectModel_ObservableCollection___0__System_Func___0___1__
  commentId: M:Model.Util.ObservableCollectionExtensions.Map``2(System.Collections.ObjectModel.ObservableCollection{``0},System.Func{``0,``1})
  name.vb: Map(Of T, T2)(ObservableCollection(Of T), Func(Of T, T2))
  fullName: Model.Util.ObservableCollectionExtensions.Map<T, T2>(System.Collections.ObjectModel.ObservableCollection<T>, System.Func<T, T2>)
  fullName.vb: Model.Util.ObservableCollectionExtensions.Map(Of T, T2)(System.Collections.ObjectModel.ObservableCollection(Of T), System.Func(Of T, T2))
  nameWithType: ObservableCollectionExtensions.Map<T, T2>(ObservableCollection<T>, Func<T, T2>)
  nameWithType.vb: ObservableCollectionExtensions.Map(Of T, T2)(ObservableCollection(Of T), Func(Of T, T2))
- uid: Model.Util.ObservableCollectionExtensions.Merge*
  name: Merge
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Merge_
  commentId: Overload:Model.Util.ObservableCollectionExtensions.Merge
  isSpec: "True"
  fullName: Model.Util.ObservableCollectionExtensions.Merge
  nameWithType: ObservableCollectionExtensions.Merge
- uid: Model.Util.ObservableCollectionExtensions.Merge``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  name: Merge<T>(ObservableCollection<T>, ObservableCollection<T>)
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Merge__1_System_Collections_ObjectModel_ObservableCollection___0__System_Collections_ObjectModel_ObservableCollection___0__
  commentId: M:Model.Util.ObservableCollectionExtensions.Merge``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  name.vb: Merge(Of T)(ObservableCollection(Of T), ObservableCollection(Of T))
  fullName: Model.Util.ObservableCollectionExtensions.Merge<T>(System.Collections.ObjectModel.ObservableCollection<T>, System.Collections.ObjectModel.ObservableCollection<T>)
  fullName.vb: Model.Util.ObservableCollectionExtensions.Merge(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), System.Collections.ObjectModel.ObservableCollection(Of T))
  nameWithType: ObservableCollectionExtensions.Merge<T>(ObservableCollection<T>, ObservableCollection<T>)
  nameWithType.vb: ObservableCollectionExtensions.Merge(Of T)(ObservableCollection(Of T), ObservableCollection(Of T))
- uid: Model.Util.ObservableCollectionExtensions.Subscribe*
  name: Subscribe
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Subscribe_
  commentId: Overload:Model.Util.ObservableCollectionExtensions.Subscribe
  isSpec: "True"
  fullName: Model.Util.ObservableCollectionExtensions.Subscribe
  nameWithType: ObservableCollectionExtensions.Subscribe
- uid: Model.Util.ObservableCollectionExtensions.Subscribe``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  name: Subscribe<T>(ObservableCollection<T>, ObservableCollection<T>)
  href: api/Model.Util.ObservableCollectionExtensions.html#Model_Util_ObservableCollectionExtensions_Subscribe__1_System_Collections_ObjectModel_ObservableCollection___0__System_Collections_ObjectModel_ObservableCollection___0__
  commentId: M:Model.Util.ObservableCollectionExtensions.Subscribe``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  name.vb: Subscribe(Of T)(ObservableCollection(Of T), ObservableCollection(Of T))
  fullName: Model.Util.ObservableCollectionExtensions.Subscribe<T>(System.Collections.ObjectModel.ObservableCollection<T>, System.Collections.ObjectModel.ObservableCollection<T>)
  fullName.vb: Model.Util.ObservableCollectionExtensions.Subscribe(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), System.Collections.ObjectModel.ObservableCollection(Of T))
  nameWithType: ObservableCollectionExtensions.Subscribe<T>(ObservableCollection<T>, ObservableCollection<T>)
  nameWithType.vb: ObservableCollectionExtensions.Subscribe(Of T)(ObservableCollection(Of T), ObservableCollection(Of T))
- uid: Model.Util.PointExtensions
  name: PointExtensions
  href: api/Model.Util.PointExtensions.html
  commentId: T:Model.Util.PointExtensions
  fullName: Model.Util.PointExtensions
  nameWithType: PointExtensions
- uid: Model.Util.PointExtensions.ToGridPoint(System.Drawing.Point)
  name: ToGridPoint(Point)
  href: api/Model.Util.PointExtensions.html#Model_Util_PointExtensions_ToGridPoint_System_Drawing_Point_
  commentId: M:Model.Util.PointExtensions.ToGridPoint(System.Drawing.Point)
  fullName: Model.Util.PointExtensions.ToGridPoint(System.Drawing.Point)
  nameWithType: PointExtensions.ToGridPoint(Point)
- uid: Model.Util.PointExtensions.ToGridPoint*
  name: ToGridPoint
  href: api/Model.Util.PointExtensions.html#Model_Util_PointExtensions_ToGridPoint_
  commentId: Overload:Model.Util.PointExtensions.ToGridPoint
  isSpec: "True"
  fullName: Model.Util.PointExtensions.ToGridPoint
  nameWithType: PointExtensions.ToGridPoint
- uid: Model.Util.State`1
  name: State<T>
  href: api/Model.Util.State-1.html
  commentId: T:Model.Util.State`1
  name.vb: State(Of T)
  fullName: Model.Util.State<T>
  fullName.vb: Model.Util.State(Of T)
  nameWithType: State<T>
  nameWithType.vb: State(Of T)
- uid: Model.Util.State`1.#ctor(`0)
  name: State(T)
  href: api/Model.Util.State-1.html#Model_Util_State_1__ctor__0_
  commentId: M:Model.Util.State`1.#ctor(`0)
  fullName: Model.Util.State<T>.State(T)
  fullName.vb: Model.Util.State(Of T).State(T)
  nameWithType: State<T>.State(T)
  nameWithType.vb: State(Of T).State(T)
- uid: Model.Util.State`1.#ctor*
  name: State
  href: api/Model.Util.State-1.html#Model_Util_State_1__ctor_
  commentId: Overload:Model.Util.State`1.#ctor
  isSpec: "True"
  fullName: Model.Util.State<T>.State
  fullName.vb: Model.Util.State(Of T).State
  nameWithType: State<T>.State
  nameWithType.vb: State(Of T).State
- uid: Model.Util.State`1.Combine*
  name: Combine
  href: api/Model.Util.State-1.html#Model_Util_State_1_Combine_
  commentId: Overload:Model.Util.State`1.Combine
  isSpec: "True"
  fullName: Model.Util.State<T>.Combine
  fullName.vb: Model.Util.State(Of T).Combine
  nameWithType: State<T>.Combine
  nameWithType.vb: State(Of T).Combine
- uid: Model.Util.State`1.Combine``2(Model.Util.State{``0},System.Func{`0,``0,``1})
  name: Combine<T2, T3>(State<T2>, Func<T, T2, T3>)
  href: api/Model.Util.State-1.html#Model_Util_State_1_Combine__2_Model_Util_State___0__System_Func__0___0___1__
  commentId: M:Model.Util.State`1.Combine``2(Model.Util.State{``0},System.Func{`0,``0,``1})
  name.vb: Combine(Of T2, T3)(State(Of T2), Func(Of T, T2, T3))
  fullName: Model.Util.State<T>.Combine<T2, T3>(Model.Util.State<T2>, System.Func<T, T2, T3>)
  fullName.vb: Model.Util.State(Of T).Combine(Of T2, T3)(Model.Util.State(Of T2), System.Func(Of T, T2, T3))
  nameWithType: State<T>.Combine<T2, T3>(State<T2>, Func<T, T2, T3>)
  nameWithType.vb: State(Of T).Combine(Of T2, T3)(State(Of T2), Func(Of T, T2, T3))
- uid: Model.Util.State`1.PropertyChanged
  name: PropertyChanged
  href: api/Model.Util.State-1.html#Model_Util_State_1_PropertyChanged
  commentId: E:Model.Util.State`1.PropertyChanged
  fullName: Model.Util.State<T>.PropertyChanged
  fullName.vb: Model.Util.State(Of T).PropertyChanged
  nameWithType: State<T>.PropertyChanged
  nameWithType.vb: State(Of T).PropertyChanged
- uid: Model.Util.State`1.Select*
  name: Select
  href: api/Model.Util.State-1.html#Model_Util_State_1_Select_
  commentId: Overload:Model.Util.State`1.Select
  isSpec: "True"
  fullName: Model.Util.State<T>.Select
  fullName.vb: Model.Util.State(Of T).Select
  nameWithType: State<T>.Select
  nameWithType.vb: State(Of T).Select
- uid: Model.Util.State`1.Select``1(System.Func{`0,``0})
  name: Select<T2>(Func<T, T2>)
  href: api/Model.Util.State-1.html#Model_Util_State_1_Select__1_System_Func__0___0__
  commentId: M:Model.Util.State`1.Select``1(System.Func{`0,``0})
  name.vb: Select(Of T2)(Func(Of T, T2))
  fullName: Model.Util.State<T>.Select<T2>(System.Func<T, T2>)
  fullName.vb: Model.Util.State(Of T).Select(Of T2)(System.Func(Of T, T2))
  nameWithType: State<T>.Select<T2>(Func<T, T2>)
  nameWithType.vb: State(Of T).Select(Of T2)(Func(Of T, T2))
- uid: Model.Util.State`1.SelectMany*
  name: SelectMany
  href: api/Model.Util.State-1.html#Model_Util_State_1_SelectMany_
  commentId: Overload:Model.Util.State`1.SelectMany
  isSpec: "True"
  fullName: Model.Util.State<T>.SelectMany
  fullName.vb: Model.Util.State(Of T).SelectMany
  nameWithType: State<T>.SelectMany
  nameWithType.vb: State(Of T).SelectMany
- uid: Model.Util.State`1.SelectMany``1(System.Func{`0,Model.Util.State{``0}})
  name: SelectMany<T2>(Func<T, State<T2>>)
  href: api/Model.Util.State-1.html#Model_Util_State_1_SelectMany__1_System_Func__0_Model_Util_State___0___
  commentId: M:Model.Util.State`1.SelectMany``1(System.Func{`0,Model.Util.State{``0}})
  name.vb: SelectMany(Of T2)(Func(Of T, State(Of T2)))
  fullName: Model.Util.State<T>.SelectMany<T2>(System.Func<T, Model.Util.State<T2>>)
  fullName.vb: Model.Util.State(Of T).SelectMany(Of T2)(System.Func(Of T, Model.Util.State(Of T2)))
  nameWithType: State<T>.SelectMany<T2>(Func<T, State<T2>>)
  nameWithType.vb: State(Of T).SelectMany(Of T2)(Func(Of T, State(Of T2)))
- uid: Model.Util.State`1.SelectMany``1(System.Func{`0,System.Collections.ObjectModel.ObservableCollection{``0}})
  name: SelectMany<T2>(Func<T, ObservableCollection<T2>>)
  href: api/Model.Util.State-1.html#Model_Util_State_1_SelectMany__1_System_Func__0_System_Collections_ObjectModel_ObservableCollection___0___
  commentId: M:Model.Util.State`1.SelectMany``1(System.Func{`0,System.Collections.ObjectModel.ObservableCollection{``0}})
  name.vb: SelectMany(Of T2)(Func(Of T, ObservableCollection(Of T2)))
  fullName: Model.Util.State<T>.SelectMany<T2>(System.Func<T, System.Collections.ObjectModel.ObservableCollection<T2>>)
  fullName.vb: Model.Util.State(Of T).SelectMany(Of T2)(System.Func(Of T, System.Collections.ObjectModel.ObservableCollection(Of T2)))
  nameWithType: State<T>.SelectMany<T2>(Func<T, ObservableCollection<T2>>)
  nameWithType.vb: State(Of T).SelectMany(Of T2)(Func(Of T, ObservableCollection(Of T2)))
- uid: Model.Util.State`1.SelectTwoWay*
  name: SelectTwoWay
  href: api/Model.Util.State-1.html#Model_Util_State_1_SelectTwoWay_
  commentId: Overload:Model.Util.State`1.SelectTwoWay
  isSpec: "True"
  fullName: Model.Util.State<T>.SelectTwoWay
  fullName.vb: Model.Util.State(Of T).SelectTwoWay
  nameWithType: State<T>.SelectTwoWay
  nameWithType.vb: State(Of T).SelectTwoWay
- uid: Model.Util.State`1.SelectTwoWay``1(System.Func{`0,``0},System.Func{``0,`0})
  name: SelectTwoWay<T2>(Func<T, T2>, Func<T2, T>)
  href: api/Model.Util.State-1.html#Model_Util_State_1_SelectTwoWay__1_System_Func__0___0__System_Func___0__0__
  commentId: M:Model.Util.State`1.SelectTwoWay``1(System.Func{`0,``0},System.Func{``0,`0})
  name.vb: SelectTwoWay(Of T2)(Func(Of T, T2), Func(Of T2, T))
  fullName: Model.Util.State<T>.SelectTwoWay<T2>(System.Func<T, T2>, System.Func<T2, T>)
  fullName.vb: Model.Util.State(Of T).SelectTwoWay(Of T2)(System.Func(Of T, T2), System.Func(Of T2, T))
  nameWithType: State<T>.SelectTwoWay<T2>(Func<T, T2>, Func<T2, T>)
  nameWithType.vb: State(Of T).SelectTwoWay(Of T2)(Func(Of T, T2), Func(Of T2, T))
- uid: Model.Util.State`1.Subscribe(Model.Util.State{`0})
  name: Subscribe(State<T>)
  href: api/Model.Util.State-1.html#Model_Util_State_1_Subscribe_Model_Util_State__0__
  commentId: M:Model.Util.State`1.Subscribe(Model.Util.State{`0})
  name.vb: Subscribe(State(Of T))
  fullName: Model.Util.State<T>.Subscribe(Model.Util.State<T>)
  fullName.vb: Model.Util.State(Of T).Subscribe(Model.Util.State(Of T))
  nameWithType: State<T>.Subscribe(State<T>)
  nameWithType.vb: State(Of T).Subscribe(State(Of T))
- uid: Model.Util.State`1.Subscribe*
  name: Subscribe
  href: api/Model.Util.State-1.html#Model_Util_State_1_Subscribe_
  commentId: Overload:Model.Util.State`1.Subscribe
  isSpec: "True"
  fullName: Model.Util.State<T>.Subscribe
  fullName.vb: Model.Util.State(Of T).Subscribe
  nameWithType: State<T>.Subscribe
  nameWithType.vb: State(Of T).Subscribe
- uid: Model.Util.State`1.Value
  name: Value
  href: api/Model.Util.State-1.html#Model_Util_State_1_Value
  commentId: P:Model.Util.State`1.Value
  fullName: Model.Util.State<T>.Value
  fullName.vb: Model.Util.State(Of T).Value
  nameWithType: State<T>.Value
  nameWithType.vb: State(Of T).Value
- uid: Model.Util.State`1.Value*
  name: Value
  href: api/Model.Util.State-1.html#Model_Util_State_1_Value_
  commentId: Overload:Model.Util.State`1.Value
  isSpec: "True"
  fullName: Model.Util.State<T>.Value
  fullName.vb: Model.Util.State(Of T).Value
  nameWithType: State<T>.Value
  nameWithType.vb: State(Of T).Value
- uid: Model.Util.State`1.ValueChanged
  name: ValueChanged
  href: api/Model.Util.State-1.html#Model_Util_State_1_ValueChanged
  commentId: E:Model.Util.State`1.ValueChanged
  fullName: Model.Util.State<T>.ValueChanged
  fullName.vb: Model.Util.State(Of T).ValueChanged
  nameWithType: State<T>.ValueChanged
  nameWithType.vb: State(Of T).ValueChanged
- uid: Model.Visitor
  name: Visitor
  href: api/Model.Visitor.html
  commentId: T:Model.Visitor
  fullName: Model.Visitor
  nameWithType: Visitor
- uid: Model.Visitor.#ctor
  name: Visitor()
  href: api/Model.Visitor.html#Model_Visitor__ctor
  commentId: M:Model.Visitor.#ctor
  fullName: Model.Visitor.Visitor()
  nameWithType: Visitor.Visitor()
- uid: Model.Visitor.#ctor(Model.GridPoint,Model.Map)
  name: Visitor(GridPoint, Map)
  href: api/Model.Visitor.html#Model_Visitor__ctor_Model_GridPoint_Model_Map_
  commentId: M:Model.Visitor.#ctor(Model.GridPoint,Model.Map)
  fullName: Model.Visitor.Visitor(Model.GridPoint, Model.Map)
  nameWithType: Visitor.Visitor(GridPoint, Map)
- uid: Model.Visitor.#ctor*
  name: Visitor
  href: api/Model.Visitor.html#Model_Visitor__ctor_
  commentId: Overload:Model.Visitor.#ctor
  isSpec: "True"
  fullName: Model.Visitor.Visitor
  nameWithType: Visitor.Visitor
- uid: Model.Visitor.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  name: CanBePlacedOnLocation(GridPoint, Park)
  href: api/Model.Visitor.html#Model_Visitor_CanBePlacedOnLocation_Model_GridPoint_Model_Park_
  commentId: M:Model.Visitor.CanBePlacedOnLocation(Model.GridPoint,Model.Park)
  fullName: Model.Visitor.CanBePlacedOnLocation(Model.GridPoint, Model.Park)
  nameWithType: Visitor.CanBePlacedOnLocation(GridPoint, Park)
- uid: Model.Visitor.CanBePlacedOnLocation*
  name: CanBePlacedOnLocation
  href: api/Model.Visitor.html#Model_Visitor_CanBePlacedOnLocation_
  commentId: Overload:Model.Visitor.CanBePlacedOnLocation
  isSpec: "True"
  fullName: Model.Visitor.CanBePlacedOnLocation
  nameWithType: Visitor.CanBePlacedOnLocation
- uid: Model.Visitor.CanNotUseCurrentBuilding
  name: CanNotUseCurrentBuilding()
  href: api/Model.Visitor.html#Model_Visitor_CanNotUseCurrentBuilding
  commentId: M:Model.Visitor.CanNotUseCurrentBuilding
  fullName: Model.Visitor.CanNotUseCurrentBuilding()
  nameWithType: Visitor.CanNotUseCurrentBuilding()
- uid: Model.Visitor.CanNotUseCurrentBuilding*
  name: CanNotUseCurrentBuilding
  href: api/Model.Visitor.html#Model_Visitor_CanNotUseCurrentBuilding_
  commentId: Overload:Model.Visitor.CanNotUseCurrentBuilding
  isSpec: "True"
  fullName: Model.Visitor.CanNotUseCurrentBuilding
  nameWithType: Visitor.CanNotUseCurrentBuilding
- uid: Model.Visitor.CurrentBuilding
  name: CurrentBuilding
  href: api/Model.Visitor.html#Model_Visitor_CurrentBuilding
  commentId: P:Model.Visitor.CurrentBuilding
  fullName: Model.Visitor.CurrentBuilding
  nameWithType: Visitor.CurrentBuilding
- uid: Model.Visitor.CurrentBuilding*
  name: CurrentBuilding
  href: api/Model.Visitor.html#Model_Visitor_CurrentBuilding_
  commentId: Overload:Model.Visitor.CurrentBuilding
  isSpec: "True"
  fullName: Model.Visitor.CurrentBuilding
  nameWithType: Visitor.CurrentBuilding
- uid: Model.Visitor.DeductFeeAndStartUsing(System.Int32)
  name: DeductFeeAndStartUsing(Int32)
  href: api/Model.Visitor.html#Model_Visitor_DeductFeeAndStartUsing_System_Int32_
  commentId: M:Model.Visitor.DeductFeeAndStartUsing(System.Int32)
  fullName: Model.Visitor.DeductFeeAndStartUsing(System.Int32)
  nameWithType: Visitor.DeductFeeAndStartUsing(Int32)
- uid: Model.Visitor.DeductFeeAndStartUsing*
  name: DeductFeeAndStartUsing
  href: api/Model.Visitor.html#Model_Visitor_DeductFeeAndStartUsing_
  commentId: Overload:Model.Visitor.DeductFeeAndStartUsing
  isSpec: "True"
  fullName: Model.Visitor.DeductFeeAndStartUsing
  nameWithType: Visitor.DeductFeeAndStartUsing
- uid: Model.Visitor.Direction
  name: Direction
  href: api/Model.Visitor.html#Model_Visitor_Direction
  commentId: P:Model.Visitor.Direction
  fullName: Model.Visitor.Direction
  nameWithType: Visitor.Direction
- uid: Model.Visitor.Direction*
  name: Direction
  href: api/Model.Visitor.html#Model_Visitor_Direction_
  commentId: Overload:Model.Visitor.Direction
  isSpec: "True"
  fullName: Model.Visitor.Direction
  nameWithType: Visitor.Direction
- uid: Model.Visitor.Happiness
  name: Happiness
  href: api/Model.Visitor.html#Model_Visitor_Happiness
  commentId: P:Model.Visitor.Happiness
  fullName: Model.Visitor.Happiness
  nameWithType: Visitor.Happiness
- uid: Model.Visitor.Happiness*
  name: Happiness
  href: api/Model.Visitor.html#Model_Visitor_Happiness_
  commentId: Overload:Model.Visitor.Happiness
  isSpec: "True"
  fullName: Model.Visitor.Happiness
  nameWithType: Visitor.Happiness
- uid: Model.Visitor.HappinessState
  name: HappinessState
  href: api/Model.Visitor.html#Model_Visitor_HappinessState
  commentId: P:Model.Visitor.HappinessState
  fullName: Model.Visitor.HappinessState
  nameWithType: Visitor.HappinessState
- uid: Model.Visitor.HappinessState*
  name: HappinessState
  href: api/Model.Visitor.html#Model_Visitor_HappinessState_
  commentId: Overload:Model.Visitor.HappinessState
  isSpec: "True"
  fullName: Model.Visitor.HappinessState
  nameWithType: Visitor.HappinessState
- uid: Model.Visitor.Hunger
  name: Hunger
  href: api/Model.Visitor.html#Model_Visitor_Hunger
  commentId: P:Model.Visitor.Hunger
  fullName: Model.Visitor.Hunger
  nameWithType: Visitor.Hunger
- uid: Model.Visitor.Hunger*
  name: Hunger
  href: api/Model.Visitor.html#Model_Visitor_Hunger_
  commentId: Overload:Model.Visitor.Hunger
  isSpec: "True"
  fullName: Model.Visitor.Hunger
  nameWithType: Visitor.Hunger
- uid: Model.Visitor.HungerState
  name: HungerState
  href: api/Model.Visitor.html#Model_Visitor_HungerState
  commentId: P:Model.Visitor.HungerState
  fullName: Model.Visitor.HungerState
  nameWithType: Visitor.HungerState
- uid: Model.Visitor.HungerState*
  name: HungerState
  href: api/Model.Visitor.html#Model_Visitor_HungerState_
  commentId: Overload:Model.Visitor.HungerState
  isSpec: "True"
  fullName: Model.Visitor.HungerState
  nameWithType: Visitor.HungerState
- uid: Model.Visitor.Money
  name: Money
  href: api/Model.Visitor.html#Model_Visitor_Money
  commentId: P:Model.Visitor.Money
  fullName: Model.Visitor.Money
  nameWithType: Visitor.Money
- uid: Model.Visitor.Money*
  name: Money
  href: api/Model.Visitor.html#Model_Visitor_Money_
  commentId: Overload:Model.Visitor.Money
  isSpec: "True"
  fullName: Model.Visitor.Money
  nameWithType: Visitor.Money
- uid: Model.Visitor.MoneyState
  name: MoneyState
  href: api/Model.Visitor.html#Model_Visitor_MoneyState
  commentId: P:Model.Visitor.MoneyState
  fullName: Model.Visitor.MoneyState
  nameWithType: Visitor.MoneyState
- uid: Model.Visitor.MoneyState*
  name: MoneyState
  href: api/Model.Visitor.html#Model_Visitor_MoneyState_
  commentId: Overload:Model.Visitor.MoneyState
  isSpec: "True"
  fullName: Model.Visitor.MoneyState
  nameWithType: Visitor.MoneyState
- uid: Model.Visitor.PlayerMoving
  name: PlayerMoving
  href: api/Model.Visitor.html#Model_Visitor_PlayerMoving
  commentId: E:Model.Visitor.PlayerMoving
  fullName: Model.Visitor.PlayerMoving
  nameWithType: Visitor.PlayerMoving
- uid: Model.Visitor.Status
  name: Status
  href: api/Model.Visitor.html#Model_Visitor_Status
  commentId: P:Model.Visitor.Status
  fullName: Model.Visitor.Status
  nameWithType: Visitor.Status
- uid: Model.Visitor.Status*
  name: Status
  href: api/Model.Visitor.html#Model_Visitor_Status_
  commentId: Overload:Model.Visitor.Status
  isSpec: "True"
  fullName: Model.Visitor.Status
  nameWithType: Visitor.Status
- uid: Model.Visitor.StatusState
  name: StatusState
  href: api/Model.Visitor.html#Model_Visitor_StatusState
  commentId: P:Model.Visitor.StatusState
  fullName: Model.Visitor.StatusState
  nameWithType: Visitor.StatusState
- uid: Model.Visitor.StatusState*
  name: StatusState
  href: api/Model.Visitor.html#Model_Visitor_StatusState_
  commentId: Overload:Model.Visitor.StatusState
  isSpec: "True"
  fullName: Model.Visitor.StatusState
  nameWithType: Visitor.StatusState
- uid: Model.Visitor.StepInQueue
  name: StepInQueue()
  href: api/Model.Visitor.html#Model_Visitor_StepInQueue
  commentId: M:Model.Visitor.StepInQueue
  fullName: Model.Visitor.StepInQueue()
  nameWithType: Visitor.StepInQueue()
- uid: Model.Visitor.StepInQueue*
  name: StepInQueue
  href: api/Model.Visitor.html#Model_Visitor_StepInQueue_
  commentId: Overload:Model.Visitor.StepInQueue
  isSpec: "True"
  fullName: Model.Visitor.StepInQueue
  nameWithType: Visitor.StepInQueue
- uid: Model.Visitor.TimeAdvanced
  name: TimeAdvanced()
  href: api/Model.Visitor.html#Model_Visitor_TimeAdvanced
  commentId: M:Model.Visitor.TimeAdvanced
  fullName: Model.Visitor.TimeAdvanced()
  nameWithType: Visitor.TimeAdvanced()
- uid: Model.Visitor.TimeAdvanced*
  name: TimeAdvanced
  href: api/Model.Visitor.html#Model_Visitor_TimeAdvanced_
  commentId: Overload:Model.Visitor.TimeAdvanced
  isSpec: "True"
  fullName: Model.Visitor.TimeAdvanced
  nameWithType: Visitor.TimeAdvanced
- uid: Model.VisitorStatus
  name: VisitorStatus
  href: api/Model.VisitorStatus.html
  commentId: T:Model.VisitorStatus
  fullName: Model.VisitorStatus
  nameWithType: VisitorStatus
- uid: Model.VisitorStatus.Busy
  name: Busy
  href: api/Model.VisitorStatus.html#Model_VisitorStatus_Busy
  commentId: F:Model.VisitorStatus.Busy
  fullName: Model.VisitorStatus.Busy
  nameWithType: VisitorStatus.Busy
- uid: Model.VisitorStatus.Waiting
  name: Waiting
  href: api/Model.VisitorStatus.html#Model_VisitorStatus_Waiting
  commentId: F:Model.VisitorStatus.Waiting
  fullName: Model.VisitorStatus.Waiting
  nameWithType: VisitorStatus.Waiting
- uid: Model.VisitorStatus.Wandering
  name: Wandering
  href: api/Model.VisitorStatus.html#Model_VisitorStatus_Wandering
  commentId: F:Model.VisitorStatus.Wandering
  fullName: Model.VisitorStatus.Wandering
  nameWithType: VisitorStatus.Wandering
- uid: Model.WorkerStatus
  name: WorkerStatus
  href: api/Model.WorkerStatus.html
  commentId: T:Model.WorkerStatus
  fullName: Model.WorkerStatus
  nameWithType: WorkerStatus
- uid: Model.WorkerStatus.Wandering
  name: Wandering
  href: api/Model.WorkerStatus.html#Model_WorkerStatus_Wandering
  commentId: F:Model.WorkerStatus.Wandering
  fullName: Model.WorkerStatus.Wandering
  nameWithType: WorkerStatus.Wandering
- uid: Model.WorkerStatus.WanderingToWork
  name: WanderingToWork
  href: api/Model.WorkerStatus.html#Model_WorkerStatus_WanderingToWork
  commentId: F:Model.WorkerStatus.WanderingToWork
  fullName: Model.WorkerStatus.WanderingToWork
  nameWithType: WorkerStatus.WanderingToWork
- uid: Model.WorkerStatus.Working
  name: Working
  href: api/Model.WorkerStatus.html#Model_WorkerStatus_Working
  commentId: F:Model.WorkerStatus.Working
  fullName: Model.WorkerStatus.Working
  nameWithType: WorkerStatus.Working
